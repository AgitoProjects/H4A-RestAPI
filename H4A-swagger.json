{
  "openapi": "3.0.1",
  "info": {
    "title": "H4ALL  API",
    "description": "H44 uygulamasının bankasürans entegrasyonunu sağlamak için gerekli REST servsileridir.<p>Proje ile ilgili gelişmeleri [Agito Projects GitHub](https://github.com/AgitoProjects/H4A-RestAPI) den takip edebilirsiniz.</p>",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/restapi"
    }
  ],
  "paths": {
    "/api/Agencies": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Acente listeleme servisi.",
        "description": "Verilen arama kriterleri için acente bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "startdatebegin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "startdateend",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "AgencyCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_AGENCY"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agencies"
        ],
        "summary": "Acente oluşturma servisi.",
        "description": "Acente oluşturma servisidir.",
        "requestBody": {
          "description": "Oluşturulmak istenen Acentenin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgencyCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgencyCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgencyCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan Acdente bilgileri dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_AGENCY"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agencies/{AgencyId}": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Acente sorgulama servisi.",
        "description": "Verilen acente kayıt numarası için Acente bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "path",
            "description": "Sorgulancak acente kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak acente kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_AGENCY"
                }
              }
            }
          }
        }
      }
    },
    "/api/BankAccounts": {
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Banka hesabı oluşturma servisi.",
        "description": "Banka hesabı oluşturma servisidir. Bireysel ya da kurumsal müşteri için yeni Banka hesabı tanımlamak için kullanılır.",
        "requestBody": {
          "description": "Oluşturulmak istenen hesap bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan Banka hesabı dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Müşteri Banka hesabı sorgulama servisi.",
        "description": "Verilen müşteri numarası için hesap bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Sorgulancak müteri id",
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müteri id",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccountResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Hatalı talep. Müşteri numarası gönderilmelidir"
          }
        }
      }
    },
    "/api/BankAccounts/{BankAccountId}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Banka hesabı sorgulama servisi.",
        "description": "Verilen Banka hesabı numarası için kartbilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "BankAccountId",
            "in": "path",
            "description": "Sorgulancak hesap id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak hesap id",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "query",
            "description": "Müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Banka hesabı güncelleme servisi.",
        "description": "Verilen kredi hesap id için hesap bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile hesap verileri güncellenir.",
        "parameters": [
          {
            "name": "BankAccountId",
            "in": "path",
            "description": "Güncellenecek hesap id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek hesap id",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek hesap bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Banka hesabı silme servisi.",
        "description": "Verilen hesap id için Banka hesabı bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen hesap bir ödemede kullanılıyor ise silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "BankAccountId",
            "in": "path",
            "description": "Silinecek hesap id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek hesap id",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "query",
            "description": "müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Silme işlemi başarılı ise"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BatchProposals": {
      "post": {
        "tags": [
          "BatchProposals"
        ],
        "summary": "Ön Teklif oluşturma servisi.",
        "description": "Ön Teklif oluşturma servisidir.",
        "requestBody": {
          "description": "Oluşturulmak istenen Ön Teklifin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan Ön Teklif numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
                }
              }
            }
          }
        }
      }
    },
    "/api/BatchProposals/{BatchProposalID}": {
      "get": {
        "tags": [
          "BatchProposals"
        ],
        "summary": "Ön Teklif sorgulama servisi.",
        "description": "Verilen ön Teklif numarası için ön Teklif bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "BatchProposalID",
            "in": "path",
            "description": "Sorgulancak Ön Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak Ön Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
                }
              }
            }
          }
        }
      }
    },
    "/api/BatchProposals/{BatchProposalID}/persons": {
      "post": {
        "tags": [
          "BatchProposals"
        ],
        "summary": "Ön Teklife kişi ekleme servisi.",
        "description": "Verilen ön Teklif numarası için yeni kişi eklemek etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "BatchProposalID",
            "in": "path",
            "description": "Ön Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ön Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Kişi bilgilieri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSALPERSON"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSALPERSON"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSALPERSON"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSAL"
                }
              }
            }
          }
        }
      }
    },
    "/api/BatchProposals/{BatchProposalID}/authapply": {
      "post": {
        "tags": [
          "BatchProposals"
        ],
        "summary": "Ön Teklife yetki onay servisi.",
        "description": "Verilen ön Teklif numarası için onay vermek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "BatchProposalID",
            "in": "path",
            "description": "Ön Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ön Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Claims": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Tazminat oluşturma servisi.",
        "description": "Verilen bilgiler ile tazminat oluşturmak için kullanılacak servistir.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_CLAIM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_CLAIM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_CLAIM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_CLAIM"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Tazminat arama servisi.",
        "description": "Verilen bilgiler ile tazminat bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "EventDateStart",
            "in": "query",
            "description": "Tazminat olay tarihi başlangıç değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat olay tarihi başlangıç değeri",
              "nullable": true
            }
          },
          {
            "name": "EventDateEnd",
            "in": "query",
            "description": "Tazminat olay tarihi bitiş değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat olay tarihi bitiş değeri",
              "nullable": true
            }
          },
          {
            "name": "CreateDateStart",
            "in": "query",
            "description": "Tazminat oluşturma tarihi başlangıç değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat oluşturma tarihi başlangıç değeri",
              "nullable": true
            }
          },
          {
            "name": "CreateDateEnd",
            "in": "query",
            "description": "Tazminat oluşturma tarihi bitiş değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat oluşturma tarihi bitiş değeri",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "Ürün numarası",
            "schema": {
              "type": "integer",
              "description": "Ürün numarası",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "description": "Acente Numarası",
            "schema": {
              "type": "integer",
              "description": "Acente Numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "PolicyId",
            "in": "query",
            "description": "Poliçe Kayıt Numarası",
            "schema": {
              "type": "integer",
              "description": "Poliçe Kayıt Numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Sigorta ettiren müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Sigorta ettiren müşteri numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Sigortalı müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Sigortalı müşteri numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "ClaimId",
            "in": "query",
            "description": "Tazminat numarası",
            "schema": {
              "type": "integer",
              "description": "Tazminat numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "ClaimStatusId",
            "in": "query",
            "description": "Hasar durum numarası",
            "schema": {
              "type": "integer",
              "description": "Hasar durum numarası",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_CLAIM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Claims/{ClaimID}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Tazminat sorgulama servisi.",
        "description": "Verilen tazminat numarası için tazminat bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ClaimID",
            "in": "path",
            "description": "Sorgulancak tazminat numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak tazminat numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_CLAIM"
                }
              }
            }
          }
        }
      }
    },
    "/api/Claims/RemaningLimit": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "KAlan limit sorgulama servisi",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "query",
            "description": "Poliçe kayıt numarası",
            "schema": {
              "type": "integer",
              "description": "Poliçe kayıt numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Müşteri numarası",
              "format": "int64"
            }
          },
          {
            "name": "BenefitId",
            "in": "query",
            "description": "Teminat numarası",
            "schema": {
              "type": "integer",
              "description": "Teminat numarası",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "NetworkId",
            "in": "query",
            "description": "Anlaşmalı kurum ağı numarası",
            "schema": {
              "type": "integer",
              "description": "Anlaşmalı kurum ağı numarası",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "BenefitGroupId",
            "in": "query",
            "description": "Teminat grubu",
            "schema": {
              "type": "integer",
              "description": "Teminat grubu",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ViewerCustomerId",
            "in": "query",
            "description": "Kalan limit görüntülemesi yapan sigortalı numarası",
            "schema": {
              "type": "integer",
              "description": "Kalan limit görüntülemesi yapan sigortalı numarası",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimRemainLimit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Claims/Report": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Tazminat raporu alma servisi.",
        "description": "Verilen bilgiler ile tazminat bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CreateDateStart",
            "in": "query",
            "description": "Hasar yaratma tarihi başlangıç değeri",
            "schema": {
              "type": "string",
              "description": "Hasar yaratma tarihi başlangıç değeri",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreateDateEnd",
            "in": "query",
            "description": "Hasar yaratma tarihi bitiş değeri",
            "schema": {
              "type": "string",
              "description": "Hasar yaratma tarihi bitiş değeri",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EventDateStart",
            "in": "query",
            "description": "Tazminat olay tarihi başlangıç değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat olay tarihi başlangıç değeri",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EventDateEnd",
            "in": "query",
            "description": "Tazminat olay tarihi bitiş değeri",
            "schema": {
              "type": "string",
              "description": "Tazminat olay tarihi bitiş değeri",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "Ürün numarası",
            "schema": {
              "type": "integer",
              "description": "Ürün numarası",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "description": "Acente Numarası",
            "schema": {
              "type": "integer",
              "description": "Acente Numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "PolicyId",
            "in": "query",
            "description": "Poliçe Kayıt Numarası",
            "schema": {
              "type": "integer",
              "description": "Poliçe Kayıt Numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Sigorta ettiren müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Sigorta ettiren müşteri numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Sigortalı müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Sigortalı müşteri numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "HealthCenterId",
            "in": "query",
            "description": "Anlaşmalı kurum numarası",
            "schema": {
              "type": "integer",
              "description": "Anlaşmalı kurum numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "ClaimId",
            "in": "query",
            "description": "Tazminat numarası",
            "schema": {
              "type": "integer",
              "description": "Tazminat numarası",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimReportResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Kurumsal müşteri oluşturma servisi.",
        "description": "Yeni bir kurumsal müşteri tanımlamak için kullanılır. Kurumsal müşteriler sigortalı olamaz. Sadece sigorta ettiren konumunda olabilirler.",
        "requestBody": {
          "description": "Oluşturulmak istenen kurumsal müşterinin bilgileri.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies/{CustomerID}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Kurumsal müşteri bilgileri",
        "description": "Kurumsal müşteri sorgulama servisidir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "istenen müterinin numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "istenen müterinin numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Kurumsal müşteri güncelleme servisi.",
        "description": "Verilen müşteri numarası için kurumsal müşteri bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek kurumsal müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Kurumsal müşteri parçalı güncelleme servisi.",
        "description": "Verilen müşteri numarası için kurumsal müşteri bilgilerini parçalı olarak güncellemek için kullanılacak servistir. Sadece verilen bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek bireysel müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Kurumsal müşteri silme servisi.",
        "description": "Verilen müşteri numarası için kurumsal müşteri bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen kuruma herhangi bir referans varsa silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Silinecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CreditCards": {
      "post": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Kredi kartı oluşturma servisi.",
        "description": "Kredi kartı oluşturma servisidir. Bireysel ya da kurumsal müşteri için yeni kredi kartı tanımlamak için kullanılır.",
        "requestBody": {
          "description": "Oluşturulmak istenen kart bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan kredi kartı dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Müşteri Kredi kartı sorgulama servisi.",
        "description": "Verilen müşteri numarası için kredi kartı bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Sorgulancak müteri id",
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müteri id",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditCardResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Hatalı talep. Müşteri numarası gönderilmelidir"
          }
        }
      }
    },
    "/api/CreditCards/{CreditCardID}": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Kredi kartı sorgulama servisi.",
        "description": "Verilen kredi kartı numarası için kartbilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CreditCardID",
            "in": "path",
            "description": "Sorgulancak kart id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak kart id",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "query",
            "description": "Kredi kartı sahibi kişi numarası",
            "schema": {
              "type": "integer",
              "description": "Kredi kartı sahibi kişi numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Kredi kartı güncelleme servisi.",
        "description": "Verilen kredi kart id için kart bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile kart verileri güncellenir.",
        "parameters": [
          {
            "name": "CreditCardID",
            "in": "path",
            "description": "Güncellenecek kart id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek kart id",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek kart bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Kredi kartı silme servisi.",
        "description": "Verilen kart id için kredi kartı bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen kart bir ödemede kullanılıyor ise silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "CreditCardID",
            "in": "path",
            "description": "Silinecek kart id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek kart id",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "query",
            "description": "Müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "İşlem başarılı tamamlandı"
          }
        }
      }
    },
    "/api/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri oluşturma servisi.",
        "description": "Müşteri oluşturma servisidir. Poliçe ve tekliflere kişi eklemek için öncelikle Müşterinin oluşturulması gerekldir.",
        "requestBody": {
          "description": "Oluşturulmak istenen Müşterinin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan müşteri numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri arama servisi.",
        "description": "Verilen bilgiler ile Müşteri aramak için kullanılacak servistir.",
        "parameters": [
          {
            "name": "IdNumber",
            "in": "query",
            "description": "Sigorta ettiren ya da sigortalı TCKN numarası",
            "schema": {
              "type": "integer",
              "description": "Sigorta ettiren ya da sigortalı TCKN numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "PolicyNumber",
            "in": "query",
            "description": "Poliçe numarası ile sigorta ettiren aramak için",
            "schema": {
              "type": "integer",
              "description": "Poliçe numarası ile sigorta ettiren aramak için",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "PolicyOrder",
            "in": "query",
            "description": "Poliçe numarası ve yenileme numarası ile sigorta ettiren aramak için",
            "schema": {
              "type": "integer",
              "description": "Poliçe numarası ve yenileme numarası ile sigorta ettiren aramak için",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "GSM",
            "in": "query",
            "description": "Cep telefon numarası ile Müşteri aramak için",
            "schema": {
              "type": "integer",
              "description": "Cep telefon numarası ile Müşteri aramak için",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "müşteri e-mail bilgisi ile arama yapmak için",
            "schema": {
              "type": "string",
              "description": "müşteri e-mail bilgisi ile arama yapmak için",
              "nullable": true
            }
          },
          {
            "name": "taxnumber",
            "in": "query",
            "description": "müşteri vergi numarası",
            "schema": {
              "type": "string",
              "description": "müşteri vergi numarası",
              "nullable": true
            }
          },
          {
            "name": "passportnumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerSearchResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{CustomerID}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri sorgulama servisi.",
        "description": "Verilen müşteri numarası için Müşteri bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sorgulancak müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri güncelleme servisi.",
        "description": "Verilen müşteri numarası için Müşteri bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri parçalı güncelleme servisi.",
        "description": "Verilen müşteri numarası için Müşteri bilgilerini parçalı olarak güncellemek için kullanılacak servistir. Sadece verilen bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri silme servisi.",
        "description": "Verilen müşteri numarası için Müşteri bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen kişiye herhangi bir referans varsa silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Silinecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customer/{CustomerID}/contactinfo": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri iletişim bilgileri servisi.",
        "description": "Verilen müşteri numarası için Müşteri iletişim bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sorgulancak müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerContactInfo"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri iletişim bilgilerini güncelleme servisi.",
        "description": "Verilen müşteri numarası için Müşteri iletişim bilgilerini güncellemek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "iletişim bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerContactInfo"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri iletişim bilgilerini parçalı güncelleme servisi.",
        "description": "Verilen müşteri numarası için Müşteri iletişim bilgilerini parçalı güncellemek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "iletişim bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerContactInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerContactInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{CustomerID}/summary": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri önemli özet bilgileri elde etme servisi",
        "description": "Verilen müşteri numarası için Müşteri poliçelerinin önemli bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sorgulancak müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerSummaryInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{CustomerID}/summary/{PolicyId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteri önemli özet bilgileri elde etme servisi, tek bir poliçe için",
        "description": "Verilen müşteri numarası için Müşteri poliçelerinin önemli bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sorgulancak müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müşteri numarası",
              "format": "int64"
            }
          },
          {
            "name": "PolicyId",
            "in": "path",
            "description": "poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerSummaryInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{CustomerID}/sendOTP": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Müşteriye OTP gönderme servisi",
        "description": "Verilen müşteri numarası için Müşteriye One Time Password SMS i göndermek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "OTP": {
                    "type": "string",
                    "description": "Müşteriye gönderilecek Tek kullanımlık şifre",
                    "nullable": true
                  },
                  "PhoneNumber": {
                    "type": "integer",
                    "description": "Müşteri numarası. Bu bilgi iletilmez ise müşteri üzerinde tanımlı GSM e SMS atılır.",
                    "format": "int64",
                    "nullable": true
                  },
                  "SendBy": {
                    "type": "string",
                    "description": "Gönderim email üzerinden yapılmak isteniyorsa değer olarak 'email' gönderilelidir, aksi durumlarda gönderim SMS üzerinden yapılacaktır",
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "description": "Telefon numarası dolu değilse, email üzerinden gönderim yapılması için kullanılacak email adresi.",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "OTP": {
                  "style": "form"
                },
                "PhoneNumber": {
                  "style": "form"
                },
                "SendBy": {
                  "style": "form"
                },
                "email": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Yeni döküman yükleme servisi",
        "description": "Verilen bilgiler ile yeni döküman oluşturmak için kullanılan servistir.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DocumentTypeCode": {
                    "type": "string",
                    "description": "Döküman Tip Kodu",
                    "nullable": true
                  },
                  "Key1": {
                    "type": "string",
                    "description": "Anahtar alan 1",
                    "nullable": true
                  },
                  "Key2": {
                    "type": "string",
                    "description": "Anahtar alan 2",
                    "nullable": true
                  },
                  "Key3": {
                    "type": "string",
                    "description": "Anahtar alan 3",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "DocumentTypeCode": {
                  "style": "form"
                },
                "Key1": {
                  "style": "form"
                },
                "Key2": {
                  "style": "form"
                },
                "Key3": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/puwsr/{puwsrid}/{controlid}": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "özel amaçlı döküman yükleme servisi",
        "description": "sigortalı eksik evrak yüklemek için kullanılan servistir.",
        "parameters": [
          {
            "name": "puwsrid",
            "in": "path",
            "description": "yükelenecek dosya referans numarası. bu bilgi size verilmiş olması gereklidir.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "yükelenecek dosya referans numarası. bu bilgi size verilmiş olması gereklidir.",
              "format": "int64"
            }
          },
          {
            "name": "controlid",
            "in": "path",
            "description": "veri kontrol değeri. bu bilgi size verilmiş olması gereklidir.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "veri kontrol değeri. bu bilgi size verilmiş olması gereklidir.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/{DocumentId}/{ControlId}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "döküman indirme servisi",
        "description": "Verilen bilgiler ile döküman indirmek için kullanılan servistir.",
        "parameters": [
          {
            "name": "DocumentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ControlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DocumentTypes": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Döküman tipi listesi",
        "description": "Döküman tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/PolicyTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Poliçe tipleri listesi",
        "description": "Poliçe tiplerinin listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyTypeResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Cities": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Şehir kodları listesi",
        "description": "Şehir kodlarını elde etmek için kullanılacak katnaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Nationalities": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Uyruk listesi",
        "description": "Uyruk listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NationalityResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/PaymentTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Ödeme tipi listesi",
        "description": "Ödeme tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/RelationTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Yakınlık tipi listesi",
        "description": "Yakınlık tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Countries": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Ülke listesi",
        "description": "Ülke listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/ProposalTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Başvuru tipi listesi",
        "description": "Başvuru tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProposalTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/InsuranceCompanies": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Sigorta şirketleri listesi",
        "description": "Sigorta şirketleri listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InsuranceCompanyResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Salesmans": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Müşteri temsilcisi listesi",
        "description": "Müşteri temsilcisi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesmanResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Occupations": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Meslek listesi",
        "description": "Meslek listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccupationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Educations": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Eğitim listesi",
        "description": "Eğitim listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EducationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/MaritalStatuses": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Medeni hal listesi",
        "description": "Medeni hal listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaritalStatusResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Genders": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Cinsiyet listesi",
        "description": "Cinsiyet listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenderResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/CustomerTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Müşteri tipi listesi",
        "description": "Müşteri tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Specialities": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Doktor uzmanlık listesi",
        "description": "Doktor uzmanlık listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialityResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/DoctorDegrees": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Doktor ünvan listesi",
        "description": "Doktor ünvan listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorDegreeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/DocumentTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Döküman tipi listesi",
        "description": "Döküman tipi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/WhereToPay": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Ödeme yeri listesi",
        "description": "Ödeme yeri listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WhereToPayResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/ClaimStatuses": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Hasar durumu listesi",
        "description": "Hasar durumu listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/ProposalCancelReasons": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Teklif iptal sebebi listesi",
        "description": "Teklif iptal sebebi listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProposalCancelReasonResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Provinces": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "İlçe listesi",
        "description": "İlçe listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvinceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Cities/{CityId}": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Bir şehrin ilçeleri listesi",
        "description": "Bir şehrin ilçeleri listesini elde etmek için kullanılacak kaynaktır.",
        "parameters": [
          {
            "name": "CityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvinceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Healthcenters": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Anlaşmalı kurum listesi",
        "description": "Anlaşmalı kurum listesini elde etmek için kullanılacak kaynaktır.",
        "parameters": [
          {
            "name": "CityId",
            "in": "query",
            "description": "şehir kodu",
            "schema": {
              "type": "integer",
              "description": "şehir kodu",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "HealthcenterTypeId",
            "in": "query",
            "description": "kurum tipi",
            "schema": {
              "type": "integer",
              "description": "kurum tipi",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "provinceId",
            "in": "query",
            "description": "ilçe kodu",
            "schema": {
              "type": "integer",
              "description": "ilçe kodu",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HealthcenterResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Diagnosis": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Tanı kodları listesi",
        "description": "Tanı kodları listesini elde etmek için kullanılacak kaynaktır.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnosisResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/Zones": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Seyehat poliçeleri için Zone listesi",
        "description": "Seyehat poliçeleri için Zone listesini elde etmek için kullanılacak kaynaktır",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/HealthcenterTypes": {
      "get": {
        "tags": [
          "H4AParams"
        ],
        "summary": "Anlaşmalı Kurum tipleri listesi",
        "description": "Anlaşmalı kurum tipleri listesini elde etmek için kullanılacak kaynaktır",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HealthCenterTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/H4AParams/checkname1": {
      "post": {
        "tags": [
          "H4AParams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/H4AParams/checkname2": {
      "post": {
        "tags": [
          "H4AParams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/checknameclass"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Payments/Cashflows": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Tahsilat/Tahakkuk listeleme servisi.",
        "description": "Verilen arama kriterleri için tahsilat/tahakkuk bilgilerini elde etmek için kullanılacak servistir.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashflowSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CashflowSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CashflowSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashflowResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Payments/Collections": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Tahsilat/Tahakkuk listeleme servisi.",
        "description": "Verilen arama kriterleri için tahsilat/tahakkuk bilgilerini elde etmek için kullanılacak servistir.\r\n            Belirli bir tarih itibari ile borçlu poliçeleri bulmak için :\r\n            tahakkuk vadesi gelmiş : **dueDateEnd** = istenen bir tarih\r\n            borcu 1 TL ye eşit veya fazla olan : **balanceMin** = 1\r\n            gönderilmelidir.\r\n            \r\n            Tahsilat hesabı için sistemde bulunan tüm tahsilat kayıtları dikkate alınmaktadır.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Tahsilat işlemi gerçekleştirir",
        "description": "Verilen bilglier ile tahsilat yapmak içinkullanılır",
        "requestBody": {
          "description": "Tahilat için giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Başarılı ise",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Persons": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Bireysel müşteri oluşturma servisi.",
        "description": "Bireysel müşteri oluşturma servisidir. Poliçe ve tekliflere kişi eklemek için öncelikle bireysel müşterinin oluşturulması gerekldir.",
        "requestBody": {
          "description": "Oluşturulmak istenen bireysel müşterinin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan müşteri numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePersonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Persons/{CustomerID}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Bireysel müşteri sorgulama servisi.",
        "description": "Verilen müşteri numarası için bireysel müşteri bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sorgulancak müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Persons"
        ],
        "summary": "Bireysel müşteri güncelleme servisi.",
        "description": "Verilen müşteri numarası için bireysel müşteri bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek bireysel müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Persons"
        ],
        "summary": "Bireysel müşteri parçalı güncelleme servisi.",
        "description": "Verilen müşteri numarası için bireysel müşteri bilgilerini parçalı olarak güncellemek için kullanılacak servistir. Sadece verilen bilgiler ile müşteri verileri güncellenir.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Güncellenecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek bireysel müşteri bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Persons"
        ],
        "summary": "Bireysel müşteri silme servisi.",
        "description": "Verilen müşteri numarası için bireysel müşteri bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen kişiye herhangi bir referans varsa silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Silinecek müşteri numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek müşteri numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Policies": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe listeleme servisi.",
        "description": "Verilen arama kriterleri için poliçe/başvuru bilgilerini elde etmek için kullanılacak servistir.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicySearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicySearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicySearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_POLICYSUMMARY"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe sorgulama servisi.",
        "description": "Verilen poliçe/başvuru kayıt numarası için poliçe/başvuru bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Sorgulancak poliçe kayıt numarası numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak poliçe kayıt numarası numarası",
              "format": "int64"
            }
          },
          {
            "name": "ShowOnlyCustomerId",
            "in": "query",
            "description": "Poliçe içindeki sigortalı listesi yerine teki bir sigortalının bilgilerinin gelmesi için kullanılacak parametre",
            "schema": {
              "type": "integer",
              "description": "Poliçe içindeki sigortalı listesi yerine teki bir sigortalının bilgilerinin gelmesi için kullanılacak parametre",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_POLICYSUMMARY"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/UWs": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "UW sorgulama servisi.",
        "description": "Verilen poliçe/başvuru kayıt numarası için UW bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Sorgulancak poliçe kayıt numarası numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak poliçe kayıt numarası numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_UWS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Insureds": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalı sorgulama servisi.",
        "description": "Verilen poliçe/başvuru kayıt numarası için Sigortalı bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Sorgulancak poliçe kayıt numarası numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak poliçe kayıt numarası numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_POLICYPERSONSUMMARY"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Cashflows": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçenin Tahsilat ve tahakkuklarını sorgulama servisi.",
        "description": "Verilen poliçe/başvuru kayıt numarası için Tahsilat ve tahakkuk bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Sorgulancak poliçe kayıt numarası numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak poliçe kayıt numarası numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashflowResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Collections": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçenin ödeme planı ve ödeme durumu sorgulama servisi.",
        "description": "Verilen poliçe/başvuru kayıt numarası için ödeme planı ve ödeme durumu bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Sorgulancak poliçe kayıt numarası numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak poliçe kayıt numarası numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollections"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/makepolicy": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Başvurudan poliçe oluşturma işlevi",
        "description": "Başvuru konumunda olan kayıttan poliçe oluşturmak için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Poliçeleştirilecek başvuru kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Poliçeleştirilecek başvuru kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Poliçe oluşturma giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakePolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/PolicyPaymentInfo": {
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe ödeme bilgilerini güncelleme işlevi",
        "description": "Başvuru konumunda olan kaydın ödeme bilgilerini güncellmek için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Ödeme bilgisi güncellenecek başvuru kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ödeme bilgisi güncellenecek başvuru kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Ödeme güncelleme giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPaymentInfoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPaymentInfoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPaymentInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyPaymentInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyPaymentInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyPaymentInfoResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe ödeme bilgilerini elde etme işlevi",
        "description": "Verilen poliçe kayıt numarasının ödeme bilgilerini elde etmek için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "poliçe/başvuru kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe/başvuru kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyPaymentInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/CancelPolicy": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçeyi iptal etme servisi",
        "description": "Yürülükteki bir poliçeyi iptal etmek için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "İptal edilecek poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "İptal edilecek poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "iptal etme giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCancelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCancelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCancelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCancelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/insureds/{CustomerID}/exit": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalı çıkış zeyili oluşturma servisi",
        "description": "Aktif bir sigortalıyı poliçeden çıkarmak için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Çıkış yapılcak poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Çıkış yapılcak poliçe kayıt numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "çıkış yapılacak sitortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "çıkış yapılacak sitortalı numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "çıkış yapma giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsuredCancelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InsuredCancelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InsuredCancelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_ENDORSEMENTRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/insureds/entry": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalı giriş zeyili oluşturma servisi",
        "description": "Aktif bir poliçeye sigortalı girişi yapmak için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "Giriş yapılcak poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Giriş yapılcak poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Girişi yapılacak sigortalı bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_ENTRYREQUEST"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_ENTRYREQUEST"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_ENTRYREQUEST"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_ENDORSEMENTRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/insureds/{CustomerID}/Exemptions": {
      "get": {
        "tags": [
          "Policies"
        ],
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonExemptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Endorsements/changeplan": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalı plan değişiklik zeyili oluşturma servisi",
        "description": "Aktif bir sigortalının planını değiştirmek için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "plan değişiklik giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanChangeEndorsomentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanChangeEndorsomentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlanChangeEndorsomentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_ENDORSEMENTRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Endorsements/apply": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "İnceleme durumuna düşmüş zeyilleri tanzim etmek için",
        "description": "İnceleme durumuna düşmüş zeyilleri tanzim etmek için  kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyEndorsomentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyEndorsomentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyEndorsomentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_ENDORSEMENTRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Endorsements": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe Zeyil listesi alma servisi",
        "description": "Poliçenin zeyil listesini almak için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe kayıt numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_POLICYCHANGE"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyID}/Endorsements/{ChangeNumber}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçenin bir Zeyilini alma servisi",
        "description": "Poliçenin bir zeyilini almak için kullanılır",
        "parameters": [
          {
            "name": "PolicyID",
            "in": "path",
            "description": "poliçe kayıt numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "poliçe kayıt numarası",
              "format": "int64"
            }
          },
          {
            "name": "ChangeNumber",
            "in": "path",
            "description": "Zeyil numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Zeyil numarası",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Başarılı ise",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_POLICYCHANGE"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/EndorsementReport": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe zeyil listeleme servisi.",
        "description": "Verilen arama kriterleri için poliçe/zeyil bilgilerini elde etmek için kullanılacak servistir.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorsementReportSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorsementReportSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EndorsementReportSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_POLICYCHANGEREPORT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyId}/insureds/{CustomerID}/Documents": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalının dökümanlarını elde etmek için kullanılan servistir",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalının dökümanlarını yüklemek için kullanılan servistir",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DocumentTypeCode": {
                    "type": "string",
                    "description": "Döküman tip kodu",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "DocumentTypeCode": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      }
    },
    "/api/Policies/{PolicyId}/insureds/{CustomerID}/Documents/{DocumentId}": {
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalının dökümanlarını güncellemek için kullanılan servistir",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          },
          {
            "name": "DocumentId",
            "in": "path",
            "description": "Döküman Id si",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Döküman Id si",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DocumentTypeCode": {
                    "type": "string",
                    "description": "Döküman tip kodu",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "DocumentTypeCode": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Sigortalının dökümanlarını silmek için kullanılan servistir",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          },
          {
            "name": "DocumentId",
            "in": "path",
            "description": "Döküman Id si",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Döküman Id si",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Policies/{PolicyId}/Documents": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Poliçe içindeki tüm sigortalılar için döküman bilgilerini almak için kullanılan servistir.",
        "parameters": [
          {
            "name": "PolicyId",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PERSONDOCUMENTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Prints": {
      "post": {
        "tags": [
          "Prints"
        ],
        "summary": "Basım servisi.",
        "description": "Verilen bilgiler ile ilgili basım dosyasının PDF formatında alınmasını sağlayan servistir.",
        "requestBody": {
          "description": "basım için gerekli değerleri için parametre",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrintRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Ürün listeleme servisi",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PRODUCTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Ürün sorgulama servisi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "istenilen ürün numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "istenilen ürün numarası",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PRODUCTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}/plans/{planId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Plan sorgulama servisi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Planın bağlı olduğu ürün numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Planın bağlı olduğu ürün numarası",
              "format": "int32"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "plan numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "plan numarası",
              "format": "int32"
            }
          },
          {
            "name": "benefitgroupId",
            "in": "query",
            "description": "teminat grubu filtrelemek için",
            "schema": {
              "type": "integer",
              "description": "teminat grubu filtrelemek için",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PLAN"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}/plans/{planId}/benefitgroups": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Plan içindeki teminat grupları listesi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Planın bağlı olduğu ürün numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Planın bağlı olduğu ürün numarası",
              "format": "int32"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "plan numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "plan numarası",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PLAN"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/Paymentplans": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Ödeme planları",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentplanResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}/Questions": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Ürün risk soruları listesi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_QUESTIONS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}/files": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Ürün dosyaları sorgulama servisi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "istenilen ürün numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "istenilen ürün numarası",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{productId}/plans/{planId}/files": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Plan dosyaları sorgulama servisi",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Planın bağlı olduğu ürün numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Planın bağlı olduğu ürün numarası",
              "format": "int32"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "plan numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "plan numarası",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif oluşturma servisi.",
        "description": "Teklif oluşturma servisidir. Poliçe oluşturmak için öncelikle Teklifin oluşturulması gereklidir.",
        "requestBody": {
          "description": "Oluşturulmak istenen Teklifin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Yeni oluşturulan Teklif numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif sorgulama servisi.",
        "description": "Verilen sorgulama bilgileri ile Teklif bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "createDateStart",
            "in": "query",
            "description": "Teklif aramada kullanılacak teklif oluşturma başlangıç tarihi. DD/MM/YYYY formatında",
            "schema": {
              "type": "string",
              "description": "Teklif aramada kullanılacak teklif oluşturma başlangıç tarihi. DD/MM/YYYY formatında",
              "nullable": true
            }
          },
          {
            "name": "createDateEnd",
            "in": "query",
            "description": "Teklif aramada kullanılacak teklif oluşturma bitiş tarihi.DD/MM/YYYY formatında",
            "schema": {
              "type": "string",
              "description": "Teklif aramada kullanılacak teklif oluşturma bitiş tarihi.DD/MM/YYYY formatında",
              "nullable": true
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Teklif aramada kullanılacak ürün numarası",
            "schema": {
              "type": "integer",
              "description": "Teklif aramada kullanılacak ürün numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "insurerCustomerId",
            "in": "query",
            "description": "Teklif aramada kullanılacak sigorta ettiren müşteri numarası",
            "schema": {
              "type": "integer",
              "description": "Teklif aramada kullanılacak sigorta ettiren müşteri numarası",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "sayfadaki kayıt sayısı. Max 1000 olabilir.",
            "schema": {
              "type": "integer",
              "description": "sayfadaki kayıt sayısı. Max 1000 olabilir.",
              "format": "int32",
              "default": 50,
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "sayfa numarası",
            "schema": {
              "type": "integer",
              "description": "sayfa numarası",
              "format": "int32",
              "default": 1,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif sorgulama servisi.",
        "description": "Verilen Teklif numarası için Teklif bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Sorgulancak Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif güncelleme servisi.",
        "description": "Verilen Teklif numarası için Teklif bilgilerini güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile Teklif verileri güncellenir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Güncellenecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Teklif bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif parçalı güncelleme servisi.",
        "description": "Verilen Teklif numarası için Teklif bilgilerini parçalı olarak güncellemek için kullanılacak servistir. Sadece verilen bilgiler ile Teklif verileri güncellenir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Güncellenecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Teklif bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSAL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif silme servisi.",
        "description": "Verilen Teklif numarası için Teklif bilgilerini silmek için kullanılacak servistir. Eğer silinmek istenen kişiye herhangi bir referans varsa silme işlemi başarılı olmaz.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Silinecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Response yoktur"
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/factors": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif indirim şarjman listesi servisi",
        "description": "Teklifteki indirim şarjmanların listesini almak için kullanılan servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teklif numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALFACTORS"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif indirim şarjman listesi servisi",
        "description": "Teklifteki indirim şarjmanların listesini almak için kullanılan servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_FACTORS"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_FACTORS"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_FACTORS"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Teklif numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALFACTORS"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/persons": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklife kişi ekleme servisi.",
        "description": "Teklife kişi ekleme servisidir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Kişinin oluşturulacağı Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Kişinin oluşturulacağı Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Oluşturulmak istenen kişinin bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Teklif numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içindeki tüm kişileri sorgulama servisi.",
        "description": "Verilen Teklif numarasının kişi bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Sorgulancak Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/persons/{PersonID}": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içindeki bir kişiyi sorgulama servisi.",
        "description": "Verilen Teklif numarası ve kişi numarası için kişi bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Sorgulancak Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "PersonID",
            "in": "path",
            "description": "Sorgulanacak kişi numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulanacak kişi numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içindeki bir kişiyi güncelleme servisi.",
        "description": "Verilen Teklif numarası ve kişi için kişi bilgilerini güncellemek için kullanılacak servistir. Verilen bilgiler ile teklif içindeki kişinin tüm verileri güncellenir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Güncellenecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "PersonID",
            "in": "path",
            "description": "güncellenecek kişi bilgileri",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "güncellenecek kişi bilgileri",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Teklif bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içindeki bir kişiyi parçalı güncelleme servisi.",
        "description": "Verilen Teklif numarası ve kişi için kişi bilgilerini parçalı güncellemek için kullanılacak servistir. Verilen bilgiler ile teklif içindeki kişinin verilen verileri güncellenir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Güncellenecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "PersonID",
            "in": "path",
            "description": "güncellenecek kişi bilgileri",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "güncellenecek kişi bilgileri",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Teklif bilgileri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içinden bir kişi silme servisi.",
        "description": "Verilen Teklif numarası için verilen kişiyi tekfilten silmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "PersonID",
            "in": "path",
            "description": "Silinecek kişi numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Silinecek kişi numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/persons/{PersonID}/questionanswers": {
      "put": {
        "tags": [
          "Proposals"
        ],
        "summary": "Kişi başvuru cevapları güncelleme servisi.",
        "description": "Verilen Teklif numarası ve kişi için Teklif cevaplarını güncellemek için kullanılacak servistir. Verilen tüm bilgiler ile Teklif verileri güncellenir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Güncellenecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Güncellenecek Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "PersonID",
            "in": "path",
            "description": "güncellenecek kişi bilgileri",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "güncellenecek kişi bilgileri",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Güncellenecek Teklif cevapları",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_QUESTIONANSWER"
                },
                "description": "Güncellenecek Teklif cevapları",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_QUESTIONANSWER"
                },
                "description": "Güncellenecek Teklif cevapları",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TYPE_REST_QUESTIONANSWER"
                },
                "description": "Güncellenecek Teklif cevapları",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/CreateApplication": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Tekliften poliçe başvurusu oluşturma işlevi.",
        "description": "Teklif bilgileri kullanılarak poliçe başvurusu oluşturmak için kullanılır",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Başvurunun oluşturulacağı Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Başvurunun oluşturulacağı Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Başvuru numarası dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/ChangeOwner": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Tekliften sigorta ettiren bilgisini değiştirme işlevi.",
        "description": "Teklifin sigorta ettiren bilgilerini değiştirmek için kullanılır",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Değişikliğin yapılacağı Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Değişikliğin yapılacağı Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "değikliğin yapılacağı yeni sigorta ettiren müşteri numarası",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Teklif bilgilerinin son hali dönülür",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_PROPOSALRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/cancel": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif iptal etme servisi.",
        "description": "Verilen Teklif numarası için Teklif bilgilerini iptal etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "iptal edilecek Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "iptal edilecek Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "İşlem başarı ile sonuçlandığında dönülür"
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/makepolicy": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Tekliften Poliçe oluşturma servisi.",
        "description": "Teklif bilgileri kullanılarak poliçe oluşturma servisidir. Poliçe oluşturmak için öncelikle Teklifin oluşturulması gereklidir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Poliçe oluşturulması istenen teklifin numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Poliçe oluşturulması istenen teklifin numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Başvurdan poliçe oluşturmak için gerekli giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyFromProposalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyFromProposalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MakePolicyFromProposalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_POLICYSUMMARY"
                }
              }
            }
          },
          "201": {
            "description": "Yeni oluşturulan poliçe numarası dönülür"
          },
          "400": {
            "description": "Poliçe oluşturmak için gerekli verilerin temin edilmediği durumlar için hata mesajı ile birlikte dönülür"
          }
        }
      }
    },
    "/api/Proposals/demoPremium": {
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Prim simülasyon servisi",
        "description": "Verilen Teklif bilgileri prim simülasyonu yapmak için kullanılacak servistir.",
        "requestBody": {
          "description": "prim hesabı yapılacak giriş parametreleri",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DemoPremiumRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DemoPremiumRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DemoPremiumRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DemoPremiumResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/insureds/{CustomerID}/Exemptions": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonExemptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/insureds/{CustomerID}/Documents": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Sigortalının dökümanlarını elde etmek için kullanılan servistir",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "Sigortalının dökümanlarını yüklemek için kullanılan servistir",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DocumentTypeCode": {
                    "type": "string",
                    "description": "Döküman tip kodu",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "DocumentTypeCode": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/insureds/{CustomerID}/Documents/{DocumentId}": {
      "put": {
        "tags": [
          "Proposals"
        ],
        "summary": "Sigortalının dökümanlarını güncellemek için kullanılan servistir",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          },
          {
            "name": "DocumentId",
            "in": "path",
            "description": "Döküman Id si",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Döküman Id si",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DocumentTypeCode": {
                    "type": "string",
                    "description": "Döküman tip kodu",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "DocumentTypeCode": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Proposals"
        ],
        "summary": "Sigortalının dökümanlarını silmek için kullanılan servistir",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          },
          {
            "name": "CustomerID",
            "in": "path",
            "description": "Sigortalı numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sigortalı numarası",
              "format": "int64"
            }
          },
          {
            "name": "DocumentId",
            "in": "path",
            "description": "Döküman Id si",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Döküman Id si",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Proposals/{ProposalID}/Documents": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "Teklif içindeki tüm sigortalılar için döküman bilgileirni almak için kullanılan servistir.",
        "parameters": [
          {
            "name": "ProposalID",
            "in": "path",
            "description": "Teklif numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Teklif numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_PERSONDOCUMENTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SelfClaims": {
      "post": {
        "tags": [
          "SelfClaims"
        ],
        "summary": "Self Servis Tazminat oluşturma servisi.",
        "description": "Verilen bilgiler ile self servis tazminat oluşturmak için kullanılacak servistir.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_SELFCLAIM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_SELFCLAIM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TYPE_REST_SELFCLAIM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_SELFCLAIMRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/SelfClaims/{ClaimID}": {
      "get": {
        "tags": [
          "SelfClaims"
        ],
        "summary": "Self Servis Tazminat sorgulama servisi.",
        "description": "Verilen tazminat numarası için tazminat bilgilerini elde etmek için kullanılacak servistir.",
        "parameters": [
          {
            "name": "ClaimID",
            "in": "path",
            "description": "Sorgulancak tazminat numarası",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sorgulancak tazminat numarası",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TYPE_REST_SELFCLAIMRESPONSE"
                }
              }
            }
          }
        }
      }
    },
    "/api/SelfClaims/Benefits": {
      "get": {
        "tags": [
          "SelfClaims"
        ],
        "summary": "Self Servis Tazminat yaratmak için kullanılabilinecek teminat listesi",
        "description": "Self servis tazminat oluşturma sırasında kullanılabilen teminatların listesini elde etmek için kullanılacak servistir.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TYPE_REST_SELFBENEFIT"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TYPE_REST_AGENCY": {
        "type": "object",
        "properties": {
          "agencyid": {
            "type": "integer",
            "format": "int64"
          },
          "agencycode": {
            "type": "string",
            "nullable": true
          },
          "agencyname": {
            "type": "string",
            "nullable": true
          },
          "agencytypeid": {
            "type": "string",
            "nullable": true
          },
          "agencytypedesc": {
            "type": "string",
            "nullable": true
          },
          "agencygroupid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencygroupdesc": {
            "type": "string",
            "nullable": true
          },
          "upperagencyid": {
            "type": "string",
            "nullable": true
          },
          "startdate": {
            "type": "string",
            "nullable": true
          },
          "enddate": {
            "type": "string",
            "nullable": true
          },
          "taxnumber": {
            "type": "string",
            "nullable": true
          },
          "districtoffice": {
            "type": "string",
            "nullable": true
          },
          "districtofficedesc": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "cityid": {
            "type": "string",
            "nullable": true
          },
          "registrationnumber": {
            "type": "string",
            "nullable": true
          },
          "canceldate": {
            "type": "string",
            "nullable": true
          },
          "traderegisterno": {
            "type": "string",
            "nullable": true
          },
          "upperagencycode": {
            "type": "string",
            "nullable": true
          },
          "upperagencyname": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyCreateRequest": {
        "type": "object",
        "properties": {
          "agencyCode": {
            "type": "string",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBankAccountRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Müşteri numarası",
            "format": "int64",
            "example": 123456
          },
          "accountHolder": {
            "type": "string",
            "description": "Hesap sahibi adı",
            "nullable": true,
            "example": "ERDEM SARI"
          },
          "iban": {
            "type": "string",
            "description": "IBAN bilgisi",
            "nullable": true,
            "example": "TR234234234234234"
          },
          "makeDefault": {
            "type": "boolean",
            "description": "Var sayılan hesap bilgisi olarak işaretlensin mi",
            "example": true
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankAccountResponse": {
        "type": "object",
        "properties": {
          "bankAccountId": {
            "type": "integer",
            "description": "Banka hesap id",
            "format": "int64",
            "example": 12345
          },
          "accountHolder": {
            "type": "string",
            "description": "Hesap sahibi adı soyadı",
            "nullable": true,
            "example": "ERDEM SARI"
          },
          "iban": {
            "type": "string",
            "description": "IBAN bilgisi",
            "nullable": true,
            "example": "TR2342342342342423"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Var sayılan banka hesabı mı",
            "example": true
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Banka hesabı verileri"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "TYPE_REST_ADDRESS": {
        "type": "object",
        "properties": {
          "addressid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityname": {
            "type": "string",
            "nullable": true
          },
          "provinceid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provincename": {
            "type": "string",
            "nullable": true
          },
          "countryid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressdesc": {
            "type": "string",
            "nullable": true
          },
          "createdate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_BATCHPROPOSALPERSON": {
        "type": "object",
        "properties": {
          "batchproposalid": {
            "type": "integer",
            "format": "int64"
          },
          "batchproposalpersonid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "idnumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "passportnumber": {
            "type": "string",
            "nullable": true
          },
          "nationalityid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customername": {
            "type": "string",
            "nullable": true
          },
          "customersurname": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "genderid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationtypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mothername": {
            "type": "string",
            "nullable": true
          },
          "fathername": {
            "type": "string",
            "nullable": true
          },
          "birthplace": {
            "type": "string",
            "nullable": true
          },
          "batchproposalpersonstatusid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rejectreasonid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createuser": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdate": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "familymembercount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rF_CODE": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressiD1": {
            "$ref": "#/components/schemas/TYPE_REST_ADDRESS"
          },
          "addressiD2": {
            "$ref": "#/components/schemas/TYPE_REST_ADDRESS"
          },
          "gsm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_BATCHPROPOSAL": {
        "type": "object",
        "properties": {
          "batchproposalid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "description": "Teklifin yazılacağı Acente Kayıt numarası. AGENCYID ya da AGENCYCODE değerlerinden yalnızca biri dolu olmalıdır. AGENCYID dolu ise AGENCYCODE dikkate alınmaz.",
            "format": "int64"
          },
          "productid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customername": {
            "type": "string",
            "nullable": true
          },
          "customersurname": {
            "type": "string",
            "nullable": true
          },
          "batchproposalstatusid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createuser": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdate": {
            "type": "string",
            "nullable": true
          },
          "salesmanid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "proposaltypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "istransfer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_BATCHPROPOSALPERSON"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_CLAIMDETAIL": {
        "type": "object",
        "properties": {
          "benefitid": {
            "type": "integer",
            "format": "int32"
          },
          "benefitname": {
            "type": "string",
            "nullable": true
          },
          "provisionamount": {
            "type": "number",
            "format": "double"
          },
          "coinsurance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "invoicenumber": {
            "type": "string",
            "nullable": true
          },
          "invoicedate": {
            "type": "string",
            "nullable": true
          },
          "invoiceamount": {
            "type": "number",
            "format": "double"
          },
          "invoiceexclusion": {
            "type": "number",
            "format": "double"
          },
          "noncontractamount": {
            "type": "number",
            "format": "double"
          },
          "sgkamount": {
            "type": "number",
            "format": "double"
          },
          "payableamount": {
            "type": "number",
            "format": "double"
          },
          "daycount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "netamount": {
            "type": "number",
            "format": "double"
          },
          "vatrate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finishdate": {
            "type": "string",
            "nullable": true
          },
          "receiptno": {
            "type": "string",
            "nullable": true
          },
          "seancecount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exemptionamount": {
            "type": "number",
            "format": "double"
          },
          "invoiceserialnumber": {
            "type": "string",
            "nullable": true
          },
          "customeramount": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_CLAIM": {
        "type": "object",
        "properties": {
          "claimid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "healthcenterid": {
            "type": "integer",
            "format": "int64"
          },
          "healthcentername": {
            "type": "string",
            "nullable": true
          },
          "personid": {
            "type": "integer",
            "format": "int64"
          },
          "policyid": {
            "type": "integer",
            "format": "int64"
          },
          "claimtype": {
            "type": "integer",
            "format": "int32"
          },
          "eventdate": {
            "type": "string",
            "nullable": true
          },
          "complaints": {
            "type": "string",
            "nullable": true
          },
          "claimexplain": {
            "type": "string",
            "nullable": true
          },
          "wherE2PAY": {
            "type": "integer",
            "format": "int32"
          },
          "folderid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "diagnosisid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "statusid": {
            "type": "integer",
            "format": "int32"
          },
          "statusdesc": {
            "type": "string",
            "nullable": true
          },
          "sourceid": {
            "type": "integer",
            "format": "int32"
          },
          "diplomano": {
            "type": "string",
            "nullable": true
          },
          "doctorname": {
            "type": "string",
            "nullable": true
          },
          "specialityid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reasondesc": {
            "type": "string",
            "nullable": true
          },
          "epicrisisnote": {
            "type": "string",
            "nullable": true
          },
          "medulatrackingno": {
            "type": "string",
            "nullable": true
          },
          "communicationnumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountnumber": {
            "type": "string",
            "nullable": true
          },
          "accountowner": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "paidcustomerid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "claimdetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_CLAIMDETAIL"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRemainLimit": {
        "type": "object",
        "properties": {
          "networkid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "networkdesc": {
            "type": "string",
            "nullable": true
          },
          "benefitdesc": {
            "type": "string",
            "nullable": true
          },
          "annuallimitgroupid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "annuallimitgroupdesc": {
            "type": "string",
            "nullable": true
          },
          "cburesult": {
            "type": "string",
            "nullable": true
          },
          "limitytl": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "limitytldesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "annuallimitytl": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annuallimitytldesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedlimitvalue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedlimitvaluedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "remaininglimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remaininglimitdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "annuallimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annuallimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "annuallimitday": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annuallimitdaydesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedlimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedlimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedlimitday": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedlimitdaydesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "remaininglimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remaininglimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "remaininglimitday": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remaininglimitdaydesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "annuallimitseance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annuallimitseancedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedlimitseance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedlimitseancedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "remaininglimitseance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remaininglimitseancedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "limitttb": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "limitttbdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedlimitttb": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedlimitttbdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "coinsurance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "coinsurancedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "benefitprintorder": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benefitprintorderdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgannuallimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgannuallimitdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgusedlimitvalue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgusedlimitvaluedesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgremaininglimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgremaininglimitdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgannuallimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgannuallimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgusedlimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgusedlimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ylgremaininglimitcount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ylgremaininglimitcountdesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "exemptionytl": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "exemptionytldesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "usedexemptionytl": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedexemptionytldesc": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "benefitid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitgroupid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitgroupdesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimReportResponse": {
        "type": "object",
        "properties": {
          "claimid": {
            "type": "integer",
            "format": "int64"
          },
          "detaillineid": {
            "type": "integer",
            "format": "int64"
          },
          "hasaR_NO": {
            "type": "integer",
            "format": "int64"
          },
          "policE_KAYIT_NO": {
            "type": "integer",
            "format": "int64"
          },
          "policE_NUMARASI": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "policE_SIRA_NUMARASI": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "policE_TANZIM_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "policE_BASLANGIC_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "policE_BITIS_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referanS_KODU": {
            "type": "string",
            "nullable": true
          },
          "yenI_IS_YENILEME_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "yenI_IS_YENILEME": {
            "type": "string",
            "nullable": true
          },
          "acentE_NO": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "acentE_KODU": {
            "type": "string",
            "nullable": true
          },
          "acentE_ADI": {
            "type": "string",
            "nullable": true
          },
          "acentE_BOLGE_NO": {
            "type": "string",
            "nullable": true
          },
          "acentE_BOLGE": {
            "type": "string",
            "nullable": true
          },
          "acentE_TIP_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "acentE_TIPI": {
            "type": "string",
            "nullable": true
          },
          "acentE_GRUP_NO": {
            "type": "string",
            "nullable": true
          },
          "acentE_GRUBU": {
            "type": "string",
            "nullable": true
          },
          "usT_ACENTE_NO": {
            "type": "string",
            "nullable": true
          },
          "usT_ACENTE_KODU": {
            "type": "string",
            "nullable": true
          },
          "usT_ACENTE_ADI": {
            "type": "string",
            "nullable": true
          },
          "mT_NO": {
            "type": "string",
            "nullable": true
          },
          "mT_KODU": {
            "type": "string",
            "nullable": true
          },
          "mT_ADI": {
            "type": "string",
            "nullable": true
          },
          "olaY_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statU_KODU": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statU_ACIKLAMASI": {
            "type": "string",
            "nullable": true
          },
          "statU_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "odemE_YERI": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "odemE_YERI_ACIKLAMA": {
            "type": "string",
            "nullable": true
          },
          "kuruM_KODU": {
            "type": "string",
            "nullable": true
          },
          "kuruM_ADI": {
            "type": "string",
            "nullable": true
          },
          "kuruM_VKN": {
            "type": "string",
            "nullable": true
          },
          "kuruM_TICARI_UNVAN": {
            "type": "string",
            "nullable": true
          },
          "kuruM_TIPI_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "kuruM_TIPI": {
            "type": "string",
            "nullable": true
          },
          "sikayet": {
            "type": "string",
            "nullable": true
          },
          "hasaR_NOTLAR": {
            "type": "string",
            "nullable": true
          },
          "cikiS_ONAY_NOTU": {
            "type": "string",
            "nullable": true
          },
          "odenecegI_TARIH": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "odemE_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasaR_KAYIT_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plaN_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "plaN_ACIKLAMA": {
            "type": "string",
            "nullable": true
          },
          "policE_STATU": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "policE_STATU_ACIKLAMA": {
            "type": "string",
            "nullable": true
          },
          "policE_TIP_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "policE_TIPI": {
            "type": "string",
            "nullable": true
          },
          "faturA_NO": {
            "type": "string",
            "nullable": true
          },
          "faturA_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "faturA_TUTARI": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "odenebiliR_TUTAR": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "odeneN_TUTAR": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "kismI_RED_TUTARI": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "anlasmA_DISI_TUTAR": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "uruN_KODU": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uruN_ADI": {
            "type": "string",
            "nullable": true
          },
          "uretiM_KANALI_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uretiM_KANALI": {
            "type": "string",
            "nullable": true
          },
          "sigortalI_NO": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sigortalI_AD_SOYAD": {
            "type": "string",
            "nullable": true
          },
          "hasaR_SAHIBI_TCKN": {
            "type": "string",
            "nullable": true
          },
          "sigortalI_STATU_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sigortalI_STATU": {
            "type": "string",
            "nullable": true
          },
          "sigortA_ETTIREN_NO": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sigortA_ETTIREN_AD": {
            "type": "string",
            "nullable": true
          },
          "anA_NEDEN_NO": {
            "type": "string",
            "nullable": true
          },
          "anA_NEDEN": {
            "type": "string",
            "nullable": true
          },
          "anA_NEDEN_ACIKLAMA": {
            "type": "string",
            "nullable": true
          },
          "kaynaK_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "kaynaK_ADI": {
            "type": "string",
            "nullable": true
          },
          "bankA_KODU": {
            "type": "string",
            "nullable": true
          },
          "bankA_ADI": {
            "type": "string",
            "nullable": true
          },
          "subE_KODU": {
            "type": "string",
            "nullable": true
          },
          "subE_ADI": {
            "type": "string",
            "nullable": true
          },
          "hesaP_NO": {
            "type": "string",
            "nullable": true
          },
          "hesaP_SAHIBI": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "teminaT_TIP_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "teminaT_TIPI": {
            "type": "string",
            "nullable": true
          },
          "teminaT_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "teminaT_ADI": {
            "type": "string",
            "nullable": true
          },
          "teminaT_GRUBU_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "teminaT_GRUBU": {
            "type": "string",
            "nullable": true
          },
          "alT_GRUP_NO": {
            "type": "string",
            "nullable": true
          },
          "alT_GRUP_ADI": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_NO": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_ADI": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_NO_2": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_ADI_2": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_NO_3": {
            "type": "string",
            "nullable": true
          },
          "usT_GRUP_ADI_3": {
            "type": "string",
            "nullable": true
          },
          "odemE_REFERANS_NO": {
            "type": "string",
            "nullable": true
          },
          "pakeT_NO": {
            "type": "string",
            "nullable": true
          },
          "pakeT_GELIS_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pakeT_ISLEM_TARIHI": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pakeT_ACIKLAMA": {
            "type": "string",
            "nullable": true
          },
          "haricI_HASAR_NO": {
            "type": "string",
            "nullable": true
          },
          "uretiM_TIP_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uretiM_TIPI": {
            "type": "string",
            "nullable": true
          },
          "ailE_NO": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ailE_ADI": {
            "type": "string",
            "nullable": true
          },
          "hasaR_KULLANICI_NO": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hasaR_KULLANICI": {
            "type": "string",
            "nullable": true
          },
          "yakinliK_NO": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "yakinlik": {
            "type": "string",
            "nullable": true
          },
          "stopaJ_TUTARI": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "kuruM_GRUP_NO": {
            "type": "string",
            "nullable": true
          },
          "kuruM_GRUP_ADI": {
            "type": "string",
            "nullable": true
          },
          "kuruM_SIRKET_NO": {
            "type": "string",
            "nullable": true
          },
          "kuruM_SIRKET_ADI": {
            "type": "string",
            "nullable": true
          },
          "medulA_TAKIP_NO": {
            "type": "string",
            "nullable": true
          },
          "doktoR_AD": {
            "type": "string",
            "nullable": true
          },
          "doktoR_BRANS": {
            "type": "string",
            "nullable": true
          },
          "icD_KOD": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCompanyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Kurumsal müşteri adı",
            "nullable": true,
            "example": "AGİTO YAZILIM DANIŞMANLIK AŞ"
          },
          "address": {
            "type": "string",
            "description": "Şirket açık adresi",
            "nullable": true,
            "example": "ARI TEKNOKENT 2 SARIYER"
          },
          "countryid": {
            "type": "integer",
            "description": "Ülke kodu. \r\n<code>/H4AParams/Countries</code>\r\nservisinden dönen değerlerden biri olmalıdır. Türkiye için 211 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 211
          },
          "cityid": {
            "type": "integer",
            "description": "Şehir kodu. <code>/H4AParams/Cities</code>\r\nservisinden dönen değerlerden biri olmalıdır. İstanbul için 34 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 34
          },
          "provinceid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "belongsto": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxnumber": {
            "type": "string",
            "nullable": true
          },
          "taxoffice": {
            "type": "string",
            "nullable": true
          },
          "sendsms": {
            "type": "boolean",
            "nullable": true
          },
          "sendemail": {
            "type": "boolean",
            "nullable": true
          },
          "contactperson1": {
            "type": "string",
            "nullable": true
          },
          "title1": {
            "type": "string",
            "nullable": true
          },
          "email1": {
            "type": "string",
            "nullable": true
          },
          "contactperson2": {
            "type": "string",
            "nullable": true
          },
          "title2": {
            "type": "string",
            "nullable": true
          },
          "email2": {
            "type": "string",
            "nullable": true
          },
          "customerRF_Code": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Kurumsal müşteri oluşrma için gerekli bilgileri"
      },
      "CreateCompanyResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "countryid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provinceid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "belongsto": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxnumber": {
            "type": "string",
            "nullable": true
          },
          "taxoffice": {
            "type": "string",
            "nullable": true
          },
          "sendsms": {
            "type": "boolean",
            "nullable": true
          },
          "sendemail": {
            "type": "boolean",
            "nullable": true
          },
          "contactperson1": {
            "type": "string",
            "nullable": true
          },
          "title1": {
            "type": "string",
            "nullable": true
          },
          "email1": {
            "type": "string",
            "nullable": true
          },
          "contactperson2": {
            "type": "string",
            "nullable": true
          },
          "title2": {
            "type": "string",
            "nullable": true
          },
          "email2": {
            "type": "string",
            "nullable": true
          },
          "customerRF_Code": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCreditCardRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Müşter numarası",
            "format": "int64"
          },
          "cardHolder": {
            "type": "string",
            "description": "Kredi kartı sahibi adı",
            "nullable": true,
            "example": "ERDEM SARI"
          },
          "cardNumber": {
            "type": "integer",
            "description": "Kredi kartı numarası",
            "format": "int64",
            "example": 1234123412341234
          },
          "cvc": {
            "type": "integer",
            "description": "Kredi kartı CVC numarası",
            "format": "int32",
            "example": 123
          },
          "expirationDateMonth": {
            "type": "integer",
            "description": "Son kullanma ayı. MM formatında",
            "format": "int32",
            "example": 12
          },
          "expirationDateYear": {
            "type": "integer",
            "description": "son kullanma yılı. YYYY formatında",
            "format": "int32",
            "example": 2021
          },
          "makeDefault": {
            "type": "boolean",
            "description": "bu kart var sayılan kart olarak işaretlensin mi",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Kredi kartı oluşturmak için gerekli veriler"
      },
      "CreditCardResponse": {
        "required": [
          "creditCardId"
        ],
        "type": "object",
        "properties": {
          "creditCardId": {
            "type": "integer",
            "description": "Sistem tarafında kredi kartına verilen referans numarası",
            "format": "int64",
            "example": 123456
          },
          "cardHolder": {
            "type": "string",
            "description": "Kart sahibi adı soyadı",
            "nullable": true,
            "example": "ERDEM SARI"
          },
          "filteredCardNumber": {
            "type": "string",
            "description": "kart numarası",
            "nullable": true,
            "example": "4741xxxxxxxxx7018"
          },
          "expirationDateMonth": {
            "type": "integer",
            "description": "Son kullanma tarihi ayı. MM formatında",
            "format": "int32",
            "example": 3
          },
          "expirationDateYear": {
            "type": "integer",
            "description": "Son kullanma yılı. YYYY formatında",
            "format": "int32",
            "example": 2021
          },
          "isDefault": {
            "type": "boolean",
            "description": "bu kart var sayılan kart mı",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Kredi Kartı verileri"
      },
      "CustomerType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "Müşteri Tipi. 1: Bireysel Müşteri, 2:Kurumsal Müşteri",
        "format": "int32"
      },
      "CustomerRequest": {
        "type": "object",
        "properties": {
          "customerType": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "idNumber": {
            "type": "integer",
            "description": "TCKN bilgisi",
            "format": "int64",
            "nullable": true,
            "example": 12345678901
          },
          "taxNumber": {
            "type": "string",
            "description": "VKN bilgisi",
            "nullable": true
          },
          "passportNumber": {
            "type": "string",
            "description": "PAsaport numarası",
            "nullable": true,
            "example": "U27327237"
          },
          "nationlatiyId": {
            "type": "integer",
            "description": "Uyruk bilgisi. Uyruk sorgulama servisinden gelen değerlerden biri olamlıdır.",
            "format": "int32",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "description": "Telefon numarası. 18 yaş üstü bireysel sigortalılar için zorunludur. 5xxXXXxxXX fortmatında olmalıdır.",
            "nullable": true,
            "example": "5327773344"
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": " **CustomerType**=1 ise Özel,\r\n** CustomerType**=2 ise Tüzel demektir.\r\n\r\n** CustomerType**==1 ise Bireysel müşteri tanımlamak için TCKN ya da PAsaport+Uyruk bilgisi ile tanımlama yapılmalaıdır.\r\n1. TCKN ile tanımlama yapmak için** idNumber** değişkeni ile TCKN bilgisi gönderilmelidir.\r\n1. Uyruk ile tanımlama yapmak için** PassportNumber** ve** NationlatiyId** gönderilmelidir."
      },
      "CustomerResponse": {
        "required": [
          "customerid",
          "name"
        ],
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer",
            "description": "Müşteri numarası. bu bilgi müşteri ile ilgili alanlarda referans olarak kullanılacaktır.",
            "format": "int64",
            "example": 1234567890
          },
          "name": {
            "maxLength": 150,
            "type": "string",
            "description": "Bireysel müşteri adı.",
            "example": "ALİ"
          },
          "surname": {
            "maxLength": 150,
            "type": "string",
            "description": "Bireysel müşteri soyadı",
            "nullable": true,
            "example": "SARI"
          },
          "gender": {
            "type": "integer",
            "description": "Cinsyet. 1:Erkek, 2:Kadın, 3:boş",
            "format": "int32",
            "example": 1
          },
          "address": {
            "maxLength": 500,
            "type": "string",
            "description": "Açık adres",
            "nullable": true,
            "example": "FENERBAHÇE MAH. EGEMEN SOK. NO:77 KADIKOY"
          },
          "countryid": {
            "type": "integer",
            "description": "Ülke kodu. \r\n<code>/H4AParams/Countries</code>\r\nservisinden dönen değerlerden biri olmalıdır. Türkiye için 211 değeri girilmelidir.",
            "format": "int32",
            "example": 211
          },
          "cityid": {
            "type": "integer",
            "description": "Şehir kodu. <code>/H4AParams/Cities</code>\r\nservisinden dönen değerlerden biri olmalıdır. İstanbul için 34 değeri girilmelidir.",
            "format": "int32",
            "example": 34
          },
          "phone1": {
            "type": "string",
            "description": "Telefon",
            "nullable": true,
            "example": "2165432211"
          },
          "mothername": {
            "type": "string",
            "description": "Anne adı",
            "nullable": true,
            "example": "AYŞE"
          },
          "fathername": {
            "type": "string",
            "description": "Baba adı",
            "nullable": true,
            "example": "ZEKİ"
          },
          "belongsto": {
            "type": "integer",
            "description": "Müşterinin bağlı olduğu diğer müşteri. Kendisi konumundaki kişiler için boş gönderililir. Eşi ve çocuğu gibi yakınlıklarda bağlı olunan kişinin müşteri numarası gönderilmelidir.",
            "format": "int64",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "description": "GSM numarası",
            "nullable": true,
            "example": "5325554433"
          },
          "email": {
            "type": "string",
            "description": "kişi emmail bilgisi",
            "nullable": true,
            "example": "adisoyadi@mail.com"
          },
          "birthdate": {
            "type": "string",
            "description": "Doğum tarihi",
            "format": "date-time",
            "example": "1979-03-10T00:00:00.0000000"
          },
          "idnumber": {
            "type": "string",
            "description": "TCKN numarası",
            "nullable": true,
            "example": "12345678901"
          },
          "passportnumber": {
            "type": "string",
            "description": "PAsaport numarası",
            "nullable": true,
            "example": "U5380876"
          },
          "nationalityid": {
            "type": "integer",
            "description": "Uyruk. <code>Nationalities</code> servisiden dönen değerlerden biri olamlıdır. Türkiye için 1.",
            "format": "int32",
            "example": 1
          },
          "occupationId": {
            "type": "integer",
            "description": "Meslek bilgisi değeri",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "occupationdesc": {
            "type": "string",
            "description": "Meslek bilgisi açıklama",
            "nullable": true,
            "example": "1"
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bireysel müşteri oluşturma dönüş parametresi."
      },
      "CustomerSearchResponse": {
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer",
            "description": "Müşteri numarası. bu bilgi müşteri ile ilgili alanlarda referans olarak kullanılacaktır.",
            "format": "int64",
            "example": 1234567890
          },
          "customerType": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "name": {
            "type": "string",
            "description": "Bireysel müşteri adı.",
            "nullable": true,
            "example": "ALİ"
          },
          "surname": {
            "type": "string",
            "description": "Bireysel müşteri soyadı",
            "nullable": true,
            "example": "SARI"
          },
          "gender": {
            "type": "integer",
            "description": "Cinsyet. 1:Erkek, 2:Kadın, 3:boş",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "gsm": {
            "type": "integer",
            "description": "GSM numarası",
            "format": "int64",
            "nullable": true,
            "example": 5325554433
          },
          "email": {
            "type": "string",
            "description": "kişi emmail bilgisi",
            "nullable": true,
            "example": "adisoyadi@mail.com"
          },
          "idnumber": {
            "type": "integer",
            "description": "TCKN numarası",
            "format": "int64",
            "nullable": true,
            "example": 12345678901
          },
          "passportnumber": {
            "type": "string",
            "description": "PAsaport numarası",
            "nullable": true,
            "example": "U5380876"
          },
          "nationalityid": {
            "type": "integer",
            "description": "Uyruk. <code>Nationalities</code> servisiden dönen değerlerden biri olamlıdır. Türkiye için 1.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "taxNumber": {
            "type": "string",
            "description": "VKN numarası",
            "nullable": true,
            "example": "12345678901"
          },
          "birthdate": {
            "type": "string",
            "description": "Doğum tarihi",
            "format": "date-time"
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşteri oluşturma dönüş parametresi."
      },
      "PersonResponse": {
        "required": [
          "customerid",
          "name"
        ],
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer",
            "description": "Müşteri numarası. bu bilgi müşteri ile ilgili alanlarda referans olarak kullanılacaktır.",
            "format": "int64",
            "example": 1234567890
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "Bireysel müşteri adı.",
            "example": "ALİ"
          },
          "surname": {
            "maxLength": 50,
            "type": "string",
            "description": "Bireysel müşteri soyadı",
            "nullable": true,
            "example": "SARI"
          },
          "address": {
            "maxLength": 500,
            "type": "string",
            "description": "Açık adres",
            "nullable": true,
            "example": "FENERBAHÇE MAH. EGEMEN SOK. NO:77 KADIKOY"
          },
          "countryid": {
            "type": "integer",
            "description": "Ülke kodu. \r\n<code>/H4AParams/Countries</code>\r\nservisinden dönen değerlerden biri olmalıdır. Türkiye için 211 değeri girilmelidir.",
            "format": "int32",
            "example": 211
          },
          "cityid": {
            "type": "integer",
            "description": "Şehir kodu. <code>/H4AParams/Cities</code>\r\nservisinden dönen değerlerden biri olmalıdır. İstanbul için 34 değeri girilmelidir.",
            "format": "int32",
            "example": 34
          },
          "phone1": {
            "type": "string",
            "description": "Telefon",
            "nullable": true,
            "example": "2165432211"
          },
          "mothername": {
            "type": "string",
            "description": "Anne adı",
            "nullable": true,
            "example": "AYŞE"
          },
          "fathername": {
            "type": "string",
            "description": "Baba adı",
            "nullable": true,
            "example": "ZEKİ"
          },
          "belongsto": {
            "type": "integer",
            "description": "Müşterinin bağlı olduğu diğer müşteri. Kendisi konumundaki kişiler için boş gönderililir. Eşi ve çocuğu gibi yakınlıklarda bağlı olunan kişinin müşteri numarası gönderilmelidir.",
            "format": "int64",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "description": "GSM numarası",
            "nullable": true,
            "example": "5325554433"
          },
          "email": {
            "type": "string",
            "description": "kişi emmail bilgisi",
            "nullable": true,
            "example": "adisoyadi@mail.com"
          },
          "birthdate": {
            "type": "string",
            "description": "Doğum tarihi",
            "format": "date-time",
            "example": "1979-03-10T00:00:00.0000000"
          },
          "idnumber": {
            "type": "string",
            "description": "TCKN numarası",
            "nullable": true,
            "example": "12345678901"
          },
          "taxnumber": {
            "type": "string",
            "description": "VKN numarası",
            "nullable": true,
            "example": "0123456789"
          },
          "passportnumber": {
            "type": "string",
            "description": "PAsaport numarası",
            "nullable": true,
            "example": "U5380876"
          },
          "nationalityid": {
            "type": "integer",
            "description": "Uyruk. <code>Nationalities</code> servisiden dönen değerlerden biri olamlıdır. Türkiye için 1.",
            "format": "int32",
            "example": 1
          },
          "relationtypeid": {
            "type": "integer",
            "description": "Yakınlık tipi. <code>RelationTypes</code>  servisiden dönen değerlerden biri olamlıdır. Kendisi için 1.\r\n\r\n1:Kendisi, 2:Eşi,3:Çocuğu ...",
            "format": "int32",
            "example": 1
          },
          "customerrfcode": {
            "type": "string",
            "description": "Entegre olan sistemdeki müşteri referans numarası. Müşteri yaratılıken gönderilen benzersiz numara. Bu numara üzerinden entegrasyon sağlanacaktır.",
            "nullable": true,
            "example": "12345"
          },
          "genderId": {
            "type": "integer",
            "description": "Cinsiyet id",
            "format": "int32",
            "nullable": true
          },
          "genderDesc": {
            "type": "string",
            "description": "Cinsiyet Açıklaması",
            "nullable": true
          },
          "maritalstatusid": {
            "type": "integer",
            "description": "medeni durum id",
            "format": "int32",
            "nullable": true
          },
          "maritalstatusDesc": {
            "type": "string",
            "description": "Medeni durum açıklaması",
            "nullable": true
          },
          "occupationId": {
            "type": "integer",
            "description": "Meslek bilgisi değeri",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "occupationdesc": {
            "type": "string",
            "description": "Meslek bilgisi açıklama",
            "nullable": true,
            "example": "1"
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bireysel müşteri oluşturma dönüş parametresi."
      },
      "CreatePersonRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "Bireysel müşteri adı.",
            "nullable": true,
            "example": "ALİ"
          },
          "surname": {
            "maxLength": 50,
            "type": "string",
            "description": "Bireysel müşteri soyadı",
            "nullable": true,
            "example": "SARI"
          },
          "genderid": {
            "type": "integer",
            "description": "Cinsiyet. <code>Genders</code> servisinden dönen değerlerden biri olmalıdır. Erkek için1; Kadın için 2 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "address": {
            "maxLength": 500,
            "type": "string",
            "description": "Açık adres",
            "nullable": true,
            "example": "FENERBAHÇE MAH. EGEMEN SOK. NO:77 KADIKOY"
          },
          "countryid": {
            "type": "integer",
            "description": "Ülke kodu. \r\n<code>/H4AParams/Countries</code>\r\nservisinden dönen değerlerden biri olmalıdır. Türkiye için 211 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 211
          },
          "cityid": {
            "type": "integer",
            "description": "Şehir kodu. <code>/H4AParams/Cities</code>\r\nservisinden dönen değerlerden biri olmalıdır. İstanbul için 34 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 34
          },
          "provinceid": {
            "type": "integer",
            "description": "İlçe kodu. <code>Province</code>servisinden dönen değerlerden biri olmalıdır. İstanbul için 34 değeri girilmelidir.",
            "format": "int32",
            "nullable": true,
            "example": 2222
          },
          "phone1": {
            "type": "string",
            "description": "Telefon",
            "nullable": true,
            "example": "2165432211"
          },
          "mothername": {
            "type": "string",
            "description": "Anne adı",
            "nullable": true,
            "example": "AYŞE"
          },
          "fathername": {
            "type": "string",
            "description": "Baba adı",
            "nullable": true,
            "example": "ZEKİ"
          },
          "belongsto": {
            "type": "integer",
            "description": "Müşterinin bağlı olduğu diğer müşteri. Kendisi konumundaki kişiler için boş gönderililir. Eşi ve çocuğu gibi yakınlıklarda bağlı olunan kişinin müşteri numarası gönderilmelidir.",
            "format": "int64",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "description": "GSM numarası",
            "nullable": true,
            "example": "5325554433"
          },
          "email": {
            "type": "string",
            "description": "kişi emmail bilgisi",
            "nullable": true,
            "example": "adisoyadi@mail.com"
          },
          "birthdate": {
            "type": "string",
            "description": "Doğum tarihi",
            "format": "date-time",
            "example": "1979-03-10T00:00:00.0000000"
          },
          "idnumber": {
            "type": "string",
            "description": "TCKN numarası",
            "nullable": true,
            "example": "12345678901"
          },
          "passportnumber": {
            "type": "string",
            "description": "PAsaport numarası",
            "nullable": true,
            "example": "U5380876"
          },
          "nationalityid": {
            "type": "integer",
            "description": "Uyruk. <code>Nationalities</code> servisiden dönen değerlerden biri olamlıdır. Türkiye için 1.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "relationtypeid": {
            "type": "integer",
            "description": "Yakınlık tipi. <code>RelationTypes</code>  servisiden dönen değerlerden biri olamlıdır. Kendisi için 1.\r\n\r\n1:Kendisi, 2:Eşi,3:Çocuğu ...",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "customerrfcode": {
            "type": "string",
            "description": "Entegre olan sistemdeki müşteri referans numarası. Müşteri yaratılıken gönderilen benzersiz numara. Bu numara üzerinden entegrasyon sağlanacaktır.",
            "nullable": true,
            "example": "12345"
          },
          "lppd": {
            "type": "integer",
            "description": "KVKK onayı olup olmadığı",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "occupationId": {
            "type": "integer",
            "description": "Meslek bilgisi. <code>H4AParams/occupations</code> servsinden dönen kodlardan biri olmalıdır.",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "bankCustomertNumber": {
            "type": "string",
            "description": "Banka müşteri numarası",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Banka hesap numarası",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bireysel müşteri oluşturma için gerekli bilgiler"
      },
      "CustomerContactInfo": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Adres metni",
            "nullable": true,
            "example": "Fenerbahçe Mah. Egemen Sokak No:5"
          },
          "cityid1": {
            "type": "integer",
            "description": "Şehir kodu",
            "format": "int32",
            "nullable": true,
            "example": 34
          },
          "provinceid1": {
            "type": "integer",
            "description": "İlçe kodu",
            "format": "int32",
            "nullable": true
          },
          "countryid1": {
            "type": "integer",
            "description": "Ülke kodu.",
            "format": "int32",
            "nullable": true,
            "example": 211
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "cityid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provinceid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sendsms": {
            "type": "integer",
            "description": "SMS gönderim onayı. 1:Evet, 0:Hayır",
            "format": "int32",
            "nullable": true
          },
          "sendemail": {
            "type": "integer",
            "description": "mail gönderim onayı. 1:Evet, 0:Hayır",
            "format": "int32",
            "nullable": true
          },
          "cityname1": {
            "type": "string",
            "nullable": true
          },
          "cityname2": {
            "type": "string",
            "nullable": true
          },
          "provincename1": {
            "type": "string",
            "nullable": true
          },
          "provincename2": {
            "type": "string",
            "nullable": true
          },
          "countryname1": {
            "type": "string",
            "nullable": true
          },
          "countryname2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşteri iletişim bilgileri"
      },
      "CustomerContactInfoRequest": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Adres metni",
            "nullable": true,
            "example": "Fenerbahçe Mah. Egemen Sokak No:5"
          },
          "cityid1": {
            "type": "integer",
            "description": "Şehir kodu",
            "format": "int32",
            "nullable": true,
            "example": 34
          },
          "provinceid1": {
            "type": "integer",
            "description": "İlçe kodu",
            "format": "int32",
            "nullable": true
          },
          "countryid1": {
            "type": "integer",
            "description": "Ülke kodu.",
            "format": "int32",
            "nullable": true,
            "example": 211
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "gsm": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "cityid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provinceid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryid2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "sendsms": {
            "type": "integer",
            "description": "SMS gönderim onayı. 1:Evet, 0:Hayır",
            "format": "int32",
            "nullable": true
          },
          "sendemail": {
            "type": "integer",
            "description": "mail gönderim onayı. 1:Evet, 0:Hayır",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşteri iletişim bilgileri"
      },
      "CustomerSummaryInfo": {
        "type": "object",
        "properties": {
          "policyid": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "policynumber": {
            "type": "integer",
            "description": "poliçe numarası",
            "format": "int64",
            "nullable": true
          },
          "policyorder": {
            "type": "integer",
            "description": "poliçe yenileme numarası",
            "format": "int32",
            "nullable": true
          },
          "policytypeid": {
            "type": "integer",
            "description": "Poliçe tipi değeri",
            "format": "int32",
            "nullable": true
          },
          "policytypedesc": {
            "type": "string",
            "description": "Poliçe tipi açıklaması",
            "nullable": true
          },
          "policystatusid": {
            "type": "integer",
            "description": "Poliçe durumu değeri",
            "format": "int32",
            "nullable": true
          },
          "policystatusdesc": {
            "type": "string",
            "description": "Poliçe durumu açıklaması",
            "nullable": true
          },
          "policyactive": {
            "type": "integer",
            "description": "Poliçenin aktif olup oladığı. 1: Aktif, 0:Pasif",
            "format": "int32",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "description": "Ürün numarası",
            "format": "int32"
          },
          "productname": {
            "type": "string",
            "description": "Ürün adı",
            "nullable": true
          },
          "productdesc": {
            "type": "string",
            "description": "Ürün açıklaması",
            "nullable": true
          },
          "startdate": {
            "type": "string",
            "description": "Poliçe başlangıç durumu",
            "format": "date-time"
          },
          "enddate": {
            "type": "string",
            "description": "Poliçe bitiş tarihi",
            "format": "date-time"
          },
          "insurername": {
            "type": "string",
            "description": "Sigorta ettiren adı",
            "nullable": true
          },
          "duedays": {
            "type": "integer",
            "description": "Poliçe bitimine kalan süre",
            "format": "int32",
            "nullable": true
          },
          "customerroleid": {
            "type": "integer",
            "description": "Müşterinin poliçedeki konumu için verilen değer. 1: sigorta ettiren, 2:sigortalı, 3:sevdiklerim poliçesi",
            "format": "int32",
            "nullable": true
          },
          "customerroledesc": {
            "type": "string",
            "description": "Müşterinin poliçedeki konumu açıklaması.",
            "nullable": true
          },
          "paidinstallmentcount": {
            "type": "integer",
            "description": "ödenmiş taksit sayısı",
            "format": "int32",
            "nullable": true
          },
          "openinstallmentcount": {
            "type": "integer",
            "description": "ödenecek taksit sayısı",
            "format": "int32",
            "nullable": true
          },
          "debtinstallmentcount": {
            "type": "integer",
            "description": "borçlu taksit sayısı",
            "format": "int32",
            "nullable": true
          },
          "debtamount": {
            "type": "number",
            "description": "borç tutarı",
            "format": "float",
            "nullable": true
          },
          "pastdebtdays": {
            "type": "integer",
            "description": "ödenmemiş taksitten geçen süre",
            "format": "int32",
            "nullable": true
          },
          "nextinstallmentdays": {
            "type": "integer",
            "description": "ödenecek ilk taksite kalan süre",
            "format": "int32",
            "nullable": true
          },
          "paymentplanid": {
            "type": "integer",
            "description": "ödeme planu nımarası",
            "format": "int32",
            "nullable": true
          },
          "paymentplanname": {
            "type": "string",
            "description": "Ödeme planı adı",
            "nullable": true
          },
          "paymenttypeid": {
            "type": "integer",
            "description": "Ödeme tipi numarası",
            "format": "int32",
            "nullable": true
          },
          "paymenttypedesc": {
            "type": "string",
            "description": "Ödeme tipi açıklaması",
            "nullable": true
          },
          "pastdebtdate": {
            "type": "string",
            "description": "Son ödenmemiş taksit tarihi",
            "nullable": true
          },
          "nextinstallmentdate": {
            "type": "string",
            "description": "bir sonraki ödeme tarihi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşterinin poliçe özet bilgileri"
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rel": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_DOCUMENT": {
        "type": "object",
        "properties": {
          "documentid": {
            "type": "string",
            "description": "Döküman ID si",
            "nullable": true
          },
          "documenttypecode": {
            "type": "string",
            "description": "Döküman tip kodu",
            "nullable": true
          },
          "documenttypedesc": {
            "type": "string",
            "description": "Döküman tip açıklaması",
            "nullable": true
          },
          "isuploaded": {
            "type": "boolean",
            "description": "Döküman yüklendi mi"
          },
          "uploaddate": {
            "type": "string",
            "description": "Döküman yükleme tarihi",
            "nullable": true
          },
          "controlnumber": {
            "type": "string",
            "description": "döküman kontrol numarası. sadece talep edilen dökümanın geçerli bir talep olup olmadığını kontrol etmek için kullanılır.",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Döküman bilgileri"
      },
      "Document": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Basımı yapılan dosyanın adı",
            "nullable": true
          },
          "fileData": {
            "type": "string",
            "description": "basımı yapılan dosyanın içeriği",
            "format": "byte",
            "nullable": true
          },
          "fileDataType": {
            "type": "string",
            "description": "dosya içeriğinin tipi",
            "nullable": true
          },
          "fileExtention": {
            "type": "string",
            "description": "dosya uzantısı",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "description": "dosyanın boyutu",
            "format": "int64"
          },
          "documentid": {
            "type": "string",
            "description": "Döküman ID si",
            "nullable": true
          },
          "documenttypecode": {
            "type": "string",
            "description": "Döküman tip kodu",
            "nullable": true
          },
          "documenttypedesc": {
            "type": "string",
            "description": "Döküman tip açıklaması",
            "nullable": true
          },
          "isuploaded": {
            "type": "boolean",
            "description": "Döküman yüklendi mi"
          },
          "uploaddate": {
            "type": "string",
            "description": "Döküman yükleme tarihi",
            "nullable": true
          },
          "controlnumber": {
            "type": "string",
            "description": "döküman kontrol numarası. sadece talep edilen dökümanın geçerli bir talep olup olmadığını kontrol etmek için kullanılır.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypes": {
        "type": "object",
        "properties": {
          "documentTypeCode": {
            "type": "string",
            "description": "Döküman tip kodu",
            "nullable": true
          },
          "documentTypeDesc": {
            "type": "string",
            "description": "Döküman tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Döküman tipleri"
      },
      "PolicyTypeResult": {
        "type": "object",
        "properties": {
          "policyTypeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak poliçe tipi değeri",
            "format": "int32"
          },
          "policyTypeDesc": {
            "type": "string",
            "description": "Poliçe tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe tipleri"
      },
      "CityResponse": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak şehir kodu değeri",
            "format": "int32"
          },
          "cityName": {
            "type": "string",
            "description": "Şehir adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Şehir kodları"
      },
      "NationalityResponse": {
        "type": "object",
        "properties": {
          "nationalityId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak uyruk kodu değeri",
            "format": "int32"
          },
          "nationalityCode": {
            "type": "string",
            "description": "Uyruk kodu",
            "nullable": true
          },
          "nationalityDesc": {
            "type": "string",
            "description": "Uyruk açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Uyruk bilgisi"
      },
      "PaymentTypeResponse": {
        "type": "object",
        "properties": {
          "paymentTypeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ödeme tipi değeri",
            "format": "int32"
          },
          "paymentTypeDesc": {
            "type": "string",
            "description": "Ödeme tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ödeme tipi bilgisi"
      },
      "RelationTypeResponse": {
        "type": "object",
        "properties": {
          "relationTypeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak yakınlık tipi değeri",
            "format": "int32"
          },
          "relationTypeDesc": {
            "type": "string",
            "description": "Yakınlık tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Yakınlık tipi bilgisi"
      },
      "CountryResponse": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ülke kodu değeri",
            "format": "int32"
          },
          "countryName": {
            "type": "string",
            "description": "Ülke adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ülke bilgisi"
      },
      "ProposalTypeResponse": {
        "type": "object",
        "properties": {
          "proposalTypeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak teklif kodu değeri",
            "format": "int32"
          },
          "proposalTypeDesc": {
            "type": "string",
            "description": "Teklif tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teklif tipi bilgisi"
      },
      "InsuranceCompanyResponse": {
        "type": "object",
        "properties": {
          "insuranceCompanyId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak sigorta şirketi kodu değeri",
            "format": "int32"
          },
          "insuranceCompanyName": {
            "type": "string",
            "description": "Sigorta şirketi adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sirogorta şirketi bilgisi"
      },
      "SalesmanResponse": {
        "type": "object",
        "properties": {
          "salesmanId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak müşteri temsilcisi kodu",
            "format": "int32"
          },
          "salesmanName": {
            "type": "string",
            "description": "Müşteri temsilcisi adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşteri temsilcisi bilgisi"
      },
      "OccupationResponse": {
        "type": "object",
        "properties": {
          "occupationId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak meslek kodu değeri",
            "format": "int32"
          },
          "occupationDesc": {
            "type": "string",
            "description": "Meslek adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Meslek bilgisi"
      },
      "EducationResponse": {
        "type": "object",
        "properties": {
          "educationId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak eğitim durumu kodu değeri",
            "format": "int32"
          },
          "educationDesc": {
            "type": "string",
            "description": "Eğitim durumu adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Eğitim durumu bilgisi"
      },
      "MaritalStatusResponse": {
        "type": "object",
        "properties": {
          "maritalStatusId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak medeni hal kodu değeri",
            "format": "int32"
          },
          "maritalStatusDesc": {
            "type": "string",
            "description": "Medeni hal açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Medeni hal bilgisi"
      },
      "GenderResponse": {
        "type": "object",
        "properties": {
          "genderId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak cinsiyet değeri",
            "format": "int32"
          },
          "genderDesc": {
            "type": "string",
            "description": "Cinsiyet açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Cinsiyet bilgisi"
      },
      "CustomerTypeResponse": {
        "type": "object",
        "properties": {
          "customerTypeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak müşteri tipi değeri",
            "format": "int32"
          },
          "customerTypeDesc": {
            "type": "string",
            "description": "Müşteri tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Müşteri tipi bilgisi"
      },
      "SpecialityResponse": {
        "type": "object",
        "properties": {
          "specialityId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak doktor uzmanalık kodu",
            "format": "int32"
          },
          "specialityDesc": {
            "type": "string",
            "description": "Uzmanlık açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Doktor uzmanlık bilgisi"
      },
      "DoctorDegreeResponse": {
        "type": "object",
        "properties": {
          "doctorDegreeId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak doktor ünvan değeri",
            "format": "int32"
          },
          "doctorDegreeDesc": {
            "type": "string",
            "description": "Doktpr ünvan adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Doktor ünvan bilgisi"
      },
      "DocumentTypeResponse": {
        "type": "object",
        "properties": {
          "documentTypeCode": {
            "type": "string",
            "description": "Referans olarak kullanılacak döküman tipi değeri",
            "nullable": true
          },
          "documentTypeDesc": {
            "type": "string",
            "description": "Döküman tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Döküman tipi bilgisi"
      },
      "WhereToPayResponse": {
        "type": "object",
        "properties": {
          "whereToPayId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ödeme yeri değeri",
            "format": "int32"
          },
          "whereToPayDesc": {
            "type": "string",
            "description": "Ödeme yeri açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ödeme yeri bilgisi"
      },
      "ClaimStatusResponse": {
        "type": "object",
        "properties": {
          "claimStatusId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak hasar durumu değeri",
            "format": "int32"
          },
          "claimStatusDesc": {
            "type": "string",
            "description": "Hasar durumu açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Hasar durumu bilgisi"
      },
      "ProposalCancelReasonResponse": {
        "type": "object",
        "properties": {
          "proposalCancelReasonId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak teklif iptal değeri",
            "format": "int32"
          },
          "proposalCancelReasonDesc": {
            "type": "string",
            "description": "teklif iptal açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teklif iptal açıklaması bilgisi"
      },
      "ProvinceResponse": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "integer",
            "description": "İlçenin bağlı olduğu ile kodu bilgisi",
            "format": "int32"
          },
          "provinceId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ilçe kodu değeri",
            "format": "int32"
          },
          "provinceDesc": {
            "type": "string",
            "description": "İlçe adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "İlçe bilgisi"
      },
      "HealthcenterResponse": {
        "type": "object",
        "properties": {
          "healthcenterId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak anlaşmalı kurum kodu değeri",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "kurum adı",
            "nullable": true
          },
          "typeid": {
            "type": "integer",
            "description": "Kurum tipi değeri",
            "format": "int32"
          },
          "typedesc": {
            "type": "string",
            "description": "Kurum tipi açıklaması",
            "nullable": true
          },
          "specialtyid": {
            "type": "integer",
            "format": "int32"
          },
          "specialtydesc": {
            "type": "string",
            "nullable": true
          },
          "cityid": {
            "type": "integer",
            "format": "int32"
          },
          "cityname": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "format": "int32"
          },
          "productname": {
            "type": "string",
            "nullable": true
          },
          "networkid": {
            "type": "integer",
            "format": "int32"
          },
          "networkdesc": {
            "type": "string",
            "nullable": true
          },
          "provinceid": {
            "type": "integer",
            "format": "int32"
          },
          "provincedesc": {
            "type": "string",
            "nullable": true
          },
          "districtid": {
            "type": "integer",
            "format": "int32"
          },
          "districtname": {
            "type": "string",
            "nullable": true
          },
          "startdate": {
            "type": "string",
            "format": "date-time"
          },
          "enddate": {
            "type": "string",
            "format": "date-time"
          },
          "contractstatus": {
            "type": "integer",
            "format": "int32"
          },
          "statusid": {
            "type": "integer",
            "format": "int32"
          },
          "xcoordinate": {
            "type": "string",
            "nullable": true
          },
          "ycoordinate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Anlaşmalı kurum bilgisi"
      },
      "DiagnosisResponse": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak tanı kodu kodu değeri",
            "format": "int32"
          },
          "diagnosisCode": {
            "type": "string",
            "description": "Tanı kodu",
            "nullable": true
          },
          "diagnosisDesc": {
            "type": "string",
            "description": "Tanı kodu açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tanı kodu bilgisi"
      },
      "ZoneResponse": {
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "description": "referans olarak kullanılacak bölge kodu değeri",
            "format": "int32"
          },
          "zoneDesc": {
            "type": "string",
            "description": "bölge açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Seyehat poliçeleri için bölge bilgileri"
      },
      "HealthCenterTypeResponse": {
        "type": "object",
        "properties": {
          "healthCenterTypeId": {
            "type": "integer",
            "description": "referans olarak kullanılacak kurum tipi değeri",
            "format": "int32"
          },
          "healthCenterTypeDesc": {
            "type": "string",
            "description": "kurum tipi açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Anlaşmalı kurum tipleri"
      },
      "checknameclass": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CashflowType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "İşlem tipi",
        "format": "int32"
      },
      "CashflowSearchRequest": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "insurerCustomerID": {
            "type": "integer",
            "description": "Sigorta ettrien müşteri numarası",
            "format": "int64",
            "nullable": true
          },
          "insurerIdNumber": {
            "type": "integer",
            "description": "Sigorta ettiren TCKN bilgisi",
            "format": "int64",
            "nullable": true
          },
          "policyNumber": {
            "type": "integer",
            "description": "Poliçe numarası",
            "format": "int64",
            "nullable": true
          },
          "policyOrder": {
            "type": "integer",
            "description": "Poliçe sıra/yenileme numarası",
            "format": "int32",
            "nullable": true
          },
          "dueDateStart": {
            "type": "string",
            "description": "vade tarihi aralığı başlangıç",
            "format": "date-time"
          },
          "dueDateEnd": {
            "type": "string",
            "description": "Vade tarihi aralığı bitiş",
            "format": "date-time"
          },
          "cashflowType": {
            "$ref": "#/components/schemas/CashflowType"
          }
        },
        "additionalProperties": false,
        "description": "Tahakkuk/tahsilat arama giriş verileri"
      },
      "CashflowResponse": {
        "type": "object",
        "properties": {
          "cashflowID": {
            "type": "integer",
            "description": "kayıt ID",
            "format": "int64"
          },
          "policyID": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "dueDate": {
            "type": "string",
            "description": "Tahakkuk inin vade tarihi, tahsilat için tahsilat tarihi",
            "format": "date-time"
          },
          "cashflowType": {
            "$ref": "#/components/schemas/CashflowType"
          },
          "cashflowtypedesc": {
            "type": "string",
            "description": "kayıt tipi açıklamsı. 1:tahsilat, 2: tahakkuk, 3: iptal, 4:iade",
            "nullable": true
          },
          "debit": {
            "type": "number",
            "description": "Borç. Tahakkuklar ve iadeler için doludur",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "description": "Alacak. Tahsilat ve iptaller için doludur.",
            "format": "float"
          },
          "paymentTypeId": {
            "type": "integer",
            "description": "Ödeme tipi. 1: kredi kartı, 2:banka, 4: nakit",
            "format": "int32"
          },
          "paymentTypeDesc": {
            "type": "string",
            "description": "Ödeme tipi açıklaması",
            "nullable": true
          },
          "paymentChannelId": {
            "type": "integer",
            "description": "Ödeme kanalı numarası.",
            "format": "int32",
            "nullable": true
          },
          "paymentChannelDesc": {
            "type": "string",
            "description": "Ödeme kanalı açıklaması",
            "nullable": true
          },
          "customerCreditCardId": {
            "type": "integer",
            "description": "Kredi kartı numarası",
            "format": "int64",
            "nullable": true
          },
          "customerBankAccountId": {
            "type": "integer",
            "description": "Banka hesap tanımı id si",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tahakkuk ve tahsilat kayıtlarına ait bilgiler"
      },
      "CollectionSearchRequest": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "dueDateStart": {
            "type": "string",
            "description": "Vade aralığı başlangıç",
            "format": "date-time",
            "nullable": true
          },
          "dueDateEnd": {
            "type": "string",
            "description": "Vade aralığı bitiş",
            "format": "date-time",
            "nullable": true
          },
          "balanceMin": {
            "type": "number",
            "description": "Açık vade mikartarı aralığı başlangıç. Örneğin bu değer 1 gönderilise. Bir TL den fazla borcu olan tüm kayıtlar listelenir.",
            "format": "float",
            "nullable": true
          },
          "balanceMax": {
            "type": "number",
            "description": "Açık vade mikartarı aralığı bitiş.",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Açık vade arama giriş verileri"
      },
      "CollectionResponse": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "dueDate": {
            "type": "string",
            "description": "Vade tarihi",
            "format": "date-time"
          },
          "debit": {
            "type": "number",
            "description": "Borç",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "description": "Alacak",
            "format": "float"
          },
          "balance": {
            "type": "number",
            "description": "Bakiye",
            "format": "float"
          },
          "customerCreditCardId": {
            "type": "integer",
            "description": "Kredi kartı tanım id si",
            "format": "int64",
            "nullable": true
          },
          "customerBankAccountId": {
            "type": "integer",
            "description": "Banka hesap tanım id si",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Açık vade arama sonuç bilgileri"
      },
      "MakePaymentRequest": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "customerID": {
            "type": "integer",
            "description": "Ödeme yapan Müşteri numarası",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "tahsil edilecek tutar",
            "format": "float",
            "nullable": true
          },
          "creditCardID": {
            "type": "integer",
            "description": "tahsil edilecek kredi kartı kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "bankAccountID": {
            "type": "integer",
            "description": "tahsil edilecek müşteri hesap bilgisi",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tahsilat yapmak için gerekli giri verileri"
      },
      "MakePaymentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean",
            "description": "İşlem başarılı mı"
          },
          "cashflowID": {
            "type": "integer",
            "description": "oluşan hareket kaydının id si",
            "format": "int64",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "dönüş mesajı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "tahsilat sonuç bilgileri"
      },
      "CreatePersonResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Oluşturulan müşterinin numarası",
            "format": "int64",
            "example": 123456
          }
        },
        "additionalProperties": false,
        "description": "Müşteri oluşturma dönen bilgi"
      },
      "PolicySearchRequest": {
        "type": "object",
        "properties": {
          "searchTransactionDateStart": {
            "type": "string",
            "description": "Tanzim tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchTransactionDateEnd": {
            "type": "string",
            "description": "Tanzim tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchPolicyStartDateStart": {
            "type": "string",
            "description": "Poliçe başlangıç tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchPolicyStartDateEnd": {
            "type": "string",
            "description": "Poliçe başlangıç tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchPolicyEndDateStart": {
            "type": "string",
            "description": "Poliçe bitiş tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchPolicyEndDateEnd": {
            "type": "string",
            "description": "Poliçe bitiş tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "insurerCustomerID": {
            "type": "integer",
            "description": "Sigorta ettiren numarası ile arama",
            "format": "int64",
            "nullable": true
          },
          "insurerCustomerIdNumber": {
            "type": "integer",
            "description": "Sigorta ettiren TCKN si ile arama",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Ürün numarası ile arama",
            "format": "int32",
            "nullable": true
          },
          "insuredCustomerID": {
            "type": "integer",
            "description": "Sigortalı numarası ile arama",
            "format": "int64",
            "nullable": true
          },
          "insuredCustomerIdNumber": {
            "type": "integer",
            "description": "Sigortalı TCKN bilgisi ile arama",
            "format": "int64",
            "nullable": true
          },
          "policyId": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "description": "Poliçe numarası",
            "nullable": true
          },
          "policyOrder": {
            "type": "integer",
            "description": "Poliçe sıra numarası, poliçe yenileme numarası",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe arama kirterleri"
      },
      "TYPE_REST_CUSTOMERINFO": {
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer",
            "description": "Müşteri numarası",
            "format": "int64"
          },
          "referencecustomerid": {
            "type": "string",
            "description": "Entegre sistemdeki müşteri numarası",
            "nullable": true
          },
          "customertype": {
            "type": "integer",
            "description": "Müşteri tipi. 1: Özel, 2:tüzel",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Müşteri adı",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "Müşteri soyadı",
            "nullable": true
          },
          "idnumber": {
            "type": "string",
            "description": "TCKN. TC Kimlik Numarası",
            "nullable": true
          },
          "taxnumber": {
            "type": "string",
            "description": "VKN. Vergi kimlik numarası.",
            "nullable": true
          },
          "passportno": {
            "type": "string",
            "description": "Pasaport numarası",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Cinsiyet. 1:Erkek, 2:Kadın",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Doğum tarihi",
            "nullable": true
          },
          "birthplace": {
            "type": "string",
            "description": "Doğum yeri",
            "nullable": true
          },
          "fathername": {
            "type": "string",
            "description": "Baba adı",
            "nullable": true
          },
          "nationalitycode": {
            "type": "string",
            "description": "Uyruk kodu",
            "nullable": true
          },
          "telephonE1": {
            "type": "string",
            "description": "Telefon numarası",
            "nullable": true
          },
          "addresS1": {
            "type": "string",
            "description": "Adres bilgisi",
            "nullable": true
          },
          "citY1CODE": {
            "type": "string",
            "description": "Adres şehri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "email bilgisi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "müşteri bilgileri"
      },
      "TYPE_REST_PERSONEXEMPTION": {
        "type": "object",
        "properties": {
          "uwclause": {
            "type": "string",
            "description": "istisna metni",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sigortalı istisnaları"
      },
      "TYPE_REST_POLICYPERSONSUMMARY": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/TYPE_REST_CUSTOMERINFO"
          },
          "premium": {
            "type": "number",
            "description": "Brüt prim",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "description": "Net prim",
            "format": "float",
            "nullable": true
          },
          "netcommission": {
            "type": "number",
            "description": "Komisyon",
            "format": "float",
            "nullable": true
          },
          "planid": {
            "type": "integer",
            "description": "sigortalı plan numarası",
            "format": "int32",
            "nullable": true
          },
          "zoneid": {
            "type": "integer",
            "description": "Seyehat poliçeleri için zone bilgisi",
            "format": "int32",
            "nullable": true
          },
          "premiumcurrency": {
            "type": "number",
            "description": "Brüt prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netpremiumcurrency": {
            "type": "number",
            "description": "Net prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netcommissioncurrency": {
            "type": "number",
            "description": "Komisyon, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Prim döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float",
            "nullable": true
          },
          "personexemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PERSONEXEMPTION"
            },
            "description": "Sigortalı istisna metinleri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sigortalı bilgileri"
      },
      "TYPE_REST_INSTALLMENT": {
        "type": "object",
        "properties": {
          "duedate": {
            "type": "string",
            "description": "Taksit tarihi",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Taksit tutarı",
            "format": "float",
            "nullable": true
          },
          "amountcurrency": {
            "type": "number",
            "description": "Taksit tutarı, döviz cinsinden",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ödeme planı bilgileri"
      },
      "TYPE_REST_POLICYCHANGE": {
        "type": "object",
        "properties": {
          "policyid": {
            "type": "integer",
            "description": "poliçe kayıt numarası",
            "format": "int64"
          },
          "personid": {
            "type": "integer",
            "description": "Sigortalı numarası",
            "format": "int64"
          },
          "changenumber": {
            "type": "integer",
            "description": "Zeyil numarası",
            "format": "int32"
          },
          "changetypeid": {
            "type": "integer",
            "description": "zeyil tipi id",
            "format": "int32"
          },
          "changetypedesc": {
            "type": "string",
            "description": "Zeyil tipi açıklaması",
            "nullable": true
          },
          "transactiondate": {
            "type": "string",
            "description": "Tanzim tarihi",
            "nullable": true
          },
          "validfrom": {
            "type": "string",
            "description": "Zeyil geçerlilik tarihi",
            "nullable": true
          },
          "dayscover": {
            "type": "integer",
            "description": "zeyilin kapsadığı gün sayısı",
            "format": "int32",
            "nullable": true
          },
          "planid": {
            "type": "integer",
            "description": "Plan numarası",
            "format": "int32",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "description": "acente kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "subagencynum": {
            "type": "integer",
            "description": "alt acente numarası",
            "format": "int32",
            "nullable": true
          },
          "salesmanid": {
            "type": "integer",
            "description": "Satış temsilcisi numarası",
            "format": "int32",
            "nullable": true
          },
          "calculatedpremium": {
            "type": "number",
            "description": "Hesaplanan prin tutarı",
            "format": "float",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "Brüt prim",
            "format": "float",
            "nullable": true
          },
          "riskpremium": {
            "type": "number",
            "description": "Risk primi",
            "format": "float",
            "nullable": true
          },
          "tariffpremium": {
            "type": "number",
            "description": "Tarife primi",
            "format": "float",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "description": "Komisyon",
            "format": "float",
            "nullable": true
          },
          "whogetsclaim": {
            "type": "integer",
            "description": "Hasar ödemesi hangi sigortalıya yapılacak",
            "format": "int64",
            "nullable": true
          },
          "whopayS1": {
            "type": "integer",
            "description": "birinci prim ödeyen",
            "format": "int64",
            "nullable": true
          },
          "whopayS2": {
            "type": "integer",
            "description": "ikinci prim ödeyen",
            "format": "int64",
            "nullable": true
          },
          "whopayS1AMOUNT": {
            "type": "number",
            "description": "birinci prim ödeyen miktarı",
            "format": "float",
            "nullable": true
          },
          "whopayS2AMOUNT": {
            "type": "number",
            "description": "ikinci prim ödeyen miktarı",
            "format": "float",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Zeyil açıklaması",
            "nullable": true
          },
          "period": {
            "type": "string",
            "description": "zeyilin hangi muhasebe ayına yazıldığı bilgisi",
            "nullable": true
          },
          "closed": {
            "type": "integer",
            "description": "Muhasebe kapanışı oldu mu. 1 ise evet, 0 ise hayır.",
            "format": "int32",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "description": "vergi miktarı",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float",
            "nullable": true
          },
          "currencypremium": {
            "type": "number",
            "description": "Döviz primi",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Zeyil bilgileri"
      },
      "TYPE_REST_AGENCYCASHFLOW": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transdate": {
            "type": "string",
            "nullable": true
          },
          "policyid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "policynumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "policyorder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changenumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesmanid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "commissiontypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commtypedesc": {
            "type": "string",
            "nullable": true
          },
          "basedamount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "paidstatusid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paiddate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_POLICYSUMMARY": {
        "type": "object",
        "properties": {
          "policyid": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "policynumber": {
            "type": "integer",
            "description": "Poliçe üzerindeki poliçe numarası",
            "format": "int64",
            "nullable": true
          },
          "policyorder": {
            "type": "integer",
            "description": "Poliçe üzerindeki poliçe sıra numarası",
            "format": "int32",
            "nullable": true
          },
          "proposalid": {
            "type": "string",
            "description": "Teklif numarası",
            "nullable": true
          },
          "policystatusid": {
            "type": "integer",
            "description": "Poliçe durum kodu",
            "format": "int32"
          },
          "policystatusdesc": {
            "type": "string",
            "description": "Poliçe durum açıklaması",
            "nullable": true
          },
          "totalpremium": {
            "type": "number",
            "description": "Brüt prim",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "description": "Net prim",
            "format": "float",
            "nullable": true
          },
          "netcommission": {
            "type": "number",
            "description": "Net komisyon",
            "format": "float",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "description": "Ürün numarası",
            "format": "int64"
          },
          "insurer": {
            "$ref": "#/components/schemas/TYPE_REST_CUSTOMERINFO"
          },
          "startdate": {
            "type": "string",
            "description": "Poliçe başlangıç tarihi",
            "nullable": true
          },
          "enddate": {
            "type": "string",
            "description": "Poliçe bitiş tarihi",
            "nullable": true
          },
          "transactiondate": {
            "type": "string",
            "description": "Tanzim tarihi",
            "nullable": true
          },
          "insuredlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_POLICYPERSONSUMMARY"
            },
            "description": "Sigortalı listesi",
            "nullable": true
          },
          "paymentplan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_INSTALLMENT"
            },
            "description": "Poliçe Ödeme planı",
            "nullable": true
          },
          "endorsements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_POLICYCHANGE"
            },
            "description": "Poliçe zeyil listesi",
            "nullable": true
          },
          "totalpremiumcurrency": {
            "type": "number",
            "description": "Brüt prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netpremiumcurrency": {
            "type": "number",
            "description": "Net prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netcommissioncurrency": {
            "type": "number",
            "description": "Net komisyon, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz tipi",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float",
            "nullable": true
          },
          "policypremiumcurrency": {
            "type": "number",
            "description": "Poliçe basımı için kullanılcacak dövizli poliçe primi",
            "format": "float",
            "nullable": true
          },
          "policycurrencycode": {
            "type": "string",
            "description": "Poliçe basımı için kullanılacak Döviz tipi",
            "nullable": true
          },
          "policycurrencyrate": {
            "type": "number",
            "description": "Poliçe basımı için kullanılacak Döviz kuru",
            "format": "float",
            "nullable": true
          },
          "agencycommissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_AGENCYCASHFLOW"
            },
            "description": "Acente komisyon hakediş listesi",
            "nullable": true
          },
          "policytypeid": {
            "type": "integer",
            "description": "Poliçe tipi. Bireysel:1, Grup:2",
            "format": "int32",
            "nullable": true
          },
          "policytypedesc": {
            "type": "string",
            "description": "Poliçe tipi açıklaması",
            "nullable": true
          },
          "policyactive": {
            "type": "integer",
            "description": "Poliçe aktif mi, 0: pasif, 1: aktif",
            "format": "int32",
            "nullable": true
          },
          "productname": {
            "type": "string",
            "description": "Ürün adı",
            "nullable": true
          },
          "productdesc": {
            "type": "string",
            "description": "Ürün açıklaması",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "description": "Acente kayıt numarası",
            "format": "int64",
            "nullable": true
          },
          "agencycode": {
            "type": "string",
            "description": "Acente kodu",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe bilgileri"
      },
      "TYPE_REST_UWREASONS": {
        "type": "object",
        "properties": {
          "reasonid": {
            "type": "integer",
            "format": "int32"
          },
          "reasondesc": {
            "type": "string",
            "nullable": true
          },
          "closed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_UWS": {
        "type": "object",
        "properties": {
          "uwid": {
            "type": "integer",
            "format": "int64"
          },
          "customerid": {
            "type": "integer",
            "format": "int64"
          },
          "policyid": {
            "type": "integer",
            "format": "int64"
          },
          "uwstatusid": {
            "type": "integer",
            "format": "int32"
          },
          "uwstatusdesc": {
            "type": "string",
            "nullable": true
          },
          "uwdate": {
            "type": "string",
            "nullable": true
          },
          "uwreasonid": {
            "type": "integer",
            "format": "int32"
          },
          "uwreasondesc": {
            "type": "string",
            "nullable": true
          },
          "uwclause": {
            "type": "string",
            "nullable": true
          },
          "uwcancel": {
            "type": "integer",
            "format": "int32"
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_UWREASONS"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyCollections": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "description": "Vade/Ödeme tarihi",
            "format": "date-time"
          },
          "debit": {
            "type": "number",
            "description": "Tahakkuk tutarı",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "description": "Tahsilat tutarı",
            "format": "float"
          },
          "balance": {
            "type": "number",
            "description": "Bakiye",
            "format": "float"
          },
          "isClosed": {
            "type": "boolean",
            "description": "Tahakkuk kapalı mı. 0: Açık, 1: kapalı"
          },
          "lasttransactiondate": {
            "type": "string",
            "description": "Son yapılan tahsilat ya da iade tarihi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe tahakkuk ve tahsilat bilgileri"
      },
      "MakePolicyRequest": {
        "type": "object",
        "properties": {
          "transactionDate": {
            "type": "string",
            "description": "İşlemin tanzim tarihi",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MakePolicyResponse": {
        "type": "object",
        "properties": {
          "policyinfo": {
            "$ref": "#/components/schemas/TYPE_REST_POLICYSUMMARY"
          }
        },
        "additionalProperties": false
      },
      "PolicyPaymentInfoRequest": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "integer",
            "format": "int64"
          },
          "whoPaysId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "creditCardId": {
            "type": "integer",
            "format": "int64"
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Poliçe ödeme bilgileri giriş verileri"
      },
      "PolicyPaymentInfoResponse": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "integer",
            "format": "int64"
          },
          "whoPaysId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "creditCardId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe ödeme bilgileri"
      },
      "PolicyCancelType": {
        "enum": [
          1,
          2,
          3,
          5
        ],
        "type": "integer",
        "description": "Poliçe iptal tipleri\r\n<list type=\"bullet\"><item> PolicyCancelAll = 1,</item><item>PolicyCancelNoPremium = 2,</item><item>PolicyCancelDayBase = 3,</item><item>PolicyCancelBalance = 5</item></list>",
        "format": "int32"
      },
      "PolicyCancelRequest": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, kayıt oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse kayıt oluşturulur.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "İşlemin tanzim tarihi",
            "format": "date-time"
          },
          "validFrom": {
            "type": "string",
            "description": "Çıkış zeyilinin hangi tarihten itibaren geçerli olacağını belirler.",
            "format": "date-time"
          },
          "policyCancelType": {
            "$ref": "#/components/schemas/PolicyCancelType"
          }
        },
        "additionalProperties": false,
        "description": "Poliçe iptal talebi bilgileri"
      },
      "PolicyCancelResponse": {
        "type": "object",
        "properties": {
          "isSuccessfull": {
            "type": "boolean"
          },
          "endorsementNo": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InsuredCancelRequest": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, kayıt oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse kayıt oluşturulur.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "Zeyil tanzim tarihi.",
            "format": "date-time"
          },
          "validFrom": {
            "type": "string",
            "description": "Zeyilin geçerlilik tarihi. Zeyil başlangıç tarihi.",
            "format": "date-time"
          },
          "insuredCancelType": {
            "$ref": "#/components/schemas/PolicyCancelType"
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_PCR_PERSON": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/TYPE_REST_CUSTOMERINFO"
          },
          "premium": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netcommission": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "planid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "planname": {
            "type": "string",
            "nullable": true
          },
          "validfrom": {
            "type": "string",
            "nullable": true
          },
          "dayscover": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "premiumcurrency": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netpremiumcurrency": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netcommissioncurrency": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_POLICYCHANGEREPORT": {
        "type": "object",
        "properties": {
          "policyid": {
            "type": "integer",
            "format": "int64"
          },
          "policynumber": {
            "type": "integer",
            "format": "int64"
          },
          "policyorder": {
            "type": "integer",
            "format": "int32"
          },
          "changenumber": {
            "type": "integer",
            "format": "int32"
          },
          "changetypeid": {
            "type": "integer",
            "format": "int32"
          },
          "changetypedesc": {
            "type": "string",
            "nullable": true
          },
          "ownerid": {
            "type": "integer",
            "format": "int64"
          },
          "insurer": {
            "$ref": "#/components/schemas/TYPE_REST_CUSTOMERINFO"
          },
          "policystartdate": {
            "type": "string",
            "nullable": true
          },
          "policyenddate": {
            "type": "string",
            "nullable": true
          },
          "transactiondate": {
            "type": "string",
            "nullable": true
          },
          "validfrom": {
            "type": "string",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "format": "int32"
          },
          "productname": {
            "type": "string",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "format": "int64"
          },
          "agencyname": {
            "type": "string",
            "nullable": true
          },
          "subagencynum": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salesmanid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "currencypremium": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "insuredlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PCR_PERSON"
            },
            "nullable": true
          },
          "paymentplan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_INSTALLMENT"
            },
            "nullable": true
          },
          "paymenttypeid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymenttypedesc": {
            "type": "string",
            "nullable": true
          },
          "paymentplanid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencycommissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_AGENCYCASHFLOW"
            },
            "description": "Acente komisyon hakediş listesi",
            "nullable": true
          },
          "proposalid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "planid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdate": {
            "type": "string",
            "nullable": true
          },
          "sagmerid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_ENDORSEMENTRESPONSE": {
        "type": "object",
        "properties": {
          "endorsementstatusid": {
            "type": "integer",
            "description": "1: Tanzim edildi, 0 : İncelemede",
            "format": "int32"
          },
          "endorsementstatusdesc": {
            "type": "string",
            "description": "1: Tanzim edildi, 0 : İncelemede",
            "nullable": true
          },
          "endorsement": {
            "$ref": "#/components/schemas/TYPE_REST_POLICYCHANGEREPORT"
          }
        },
        "additionalProperties": false,
        "description": "Zeyil oluşturma sonuç bilgileri"
      },
      "TYPE_REST_QUESTIONANSWER": {
        "type": "object",
        "properties": {
          "questionid": {
            "type": "integer",
            "description": "Soru numarası",
            "format": "int32",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "description": "Cevap. Maksimum 200 karakter olmalıdır",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sağlık beyanı ve risk sorularına verilen cevaplar için"
      },
      "TYPE_REST_PROPOSALPERSON": {
        "type": "object",
        "properties": {
          "insuredcustomerid": {
            "type": "integer",
            "description": "Sigortalı kişi numarası",
            "format": "int64"
          },
          "planid": {
            "type": "integer",
            "description": "plan numarası",
            "format": "int32",
            "nullable": true
          },
          "personrelationtype": {
            "type": "integer",
            "description": "Kişi yakınlık tipi. /api/H4AParams/RelationTypes dönen değerlerden biri olmalıdır. 1:Kendisi,2:Eşi,3:Çocuğu gibi",
            "format": "int32",
            "nullable": true
          },
          "questionanswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_QUESTIONANSWER"
            },
            "description": "Sağlık beyanı ve risk sorularına verilen cevapların listesi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teklif içindeki sigortalılar"
      },
      "TYPE_REST_ENTRYREQUEST": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, kayıt oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse kayıt oluşturulur.",
            "format": "int32"
          },
          "transactiondate": {
            "type": "string",
            "description": "Zeyil tanzim tarihi. DD.MM.YYYY formatında",
            "nullable": true
          },
          "validfrom": {
            "type": "string",
            "description": "Zeyilin geçerlilik tarihi. Zeyil başlangıç tarihi.  DD.MM.YYYY formatında",
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
            },
            "description": "Girişi yapılacak sigortalılar",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonExemptions": {
        "type": "object",
        "properties": {
          "uwclause": {
            "type": "string",
            "description": "Muafiyet/istisna metni",
            "nullable": true
          },
          "startdate": {
            "type": "string",
            "nullable": true
          },
          "enddate": {
            "type": "string",
            "nullable": true
          },
          "exemptiontypedesc": {
            "type": "string",
            "nullable": true
          },
          "limitvalue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "diagnosisdesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sigortalı muafiyetleri"
      },
      "PlanChangeEndorsomentRequest": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, kayıt oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse kayıt oluşturulur.",
            "format": "int32"
          },
          "newPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApplyEndorsomentRequest": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, kayıt oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse kayıt oluşturulur.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EndorsementReportSearchRequest": {
        "type": "object",
        "properties": {
          "searchTransactionDateStart": {
            "type": "string",
            "description": "Tanzim tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchTransactionDateEnd": {
            "type": "string",
            "description": "Tanzim tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "insurerCustomerID": {
            "type": "integer",
            "description": "Sigorta ettiren numarası ile arama",
            "format": "int64",
            "nullable": true
          },
          "policyId": {
            "type": "integer",
            "description": "Sigorta ettiren TCKN si ile arama",
            "format": "int64",
            "nullable": true
          },
          "policyNumber": {
            "type": "integer",
            "description": "Poliçe numarası",
            "format": "int64",
            "nullable": true
          },
          "policyOrder": {
            "type": "integer",
            "description": "Poliçe sıra numarası, poliçe yenileme numarası",
            "format": "int32",
            "nullable": true
          },
          "changeNumber": {
            "type": "integer",
            "description": "Zeyil numarası ile arama yapmak için",
            "format": "int32",
            "nullable": true
          },
          "searchPolicyStartDateStart": {
            "type": "string",
            "description": "Poliçe başlama tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchPolicyStartDateEnd": {
            "type": "string",
            "description": "Poliçe başlama tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchEndorsementValidDateStart": {
            "type": "string",
            "description": "Zeyil geçerlilik tarihi/ zeyil başlama tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchEndorsementValidDateEnd": {
            "type": "string",
            "description": "Zeyil geçerlilik tarihi/ zeyil  başlama tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchEndorsementCreateDateStart": {
            "type": "string",
            "description": "Zeyil oluşturma tarihi ile arama başlangıç tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          },
          "searchEndorsementCreateDateEnd": {
            "type": "string",
            "description": "Zeyil oluşturma tarihi ile arama bitiş tarihi. DD.MM.YYYY formatında olmalıdır.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Poliçe Zeyil Raporu arama kirterleri"
      },
      "TYPE_REST_PERSONDOCUMENTS": {
        "type": "object",
        "properties": {
          "personid": {
            "type": "integer",
            "description": "sigortalı numarası",
            "format": "int64"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_DOCUMENT"
            },
            "description": "Döküman listesi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sigortalı dökümanları"
      },
      "PrintReportType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "Hangi formun basılacağı belirtmek için kullanılan enum.\r\n<list type=\"bullet\"><item>teklif formu Türkçe : 1</item><item>poliçe basımı : 2</item><item>Sertifika basımı : 3</item><item>Zeyil Basımı : 4</item><item>Bilgilendirme formu : 5</item><item>Diğer: 7</item></list>",
        "format": "int32"
      },
      "PrintRequest": {
        "type": "object",
        "properties": {
          "reportType": {
            "$ref": "#/components/schemas/PrintReportType"
          },
          "otherReportTypeName": {
            "type": "string",
            "description": "PrintReportType = 7 (Other) seçidiğinde doldurulması gereken raprot tipi adıdır.",
            "nullable": true
          },
          "parameter1": {
            "type": "string",
            "description": "basımın yapılması için gerekli parametreler. Hangi rapor için hangi değer gönderilmesi gerekitiği ayrıca belirtilecektir.",
            "nullable": true
          },
          "parameter2": {
            "type": "string",
            "description": "basım için gerekli ikinici parametre",
            "nullable": true
          },
          "parameter3": {
            "type": "string",
            "description": "basım için gerekli üçüncü parametre",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basım işlemi için giriş verilerinin tutulduğu sınıftır. Gerekli değerlerin ne olduğu yardım dökümanlarında olacaktır."
      },
      "PrintResponse": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Basımı yapılan dosyanın adı",
            "nullable": true
          },
          "fileData": {
            "type": "string",
            "description": "basımı yapılan dosyanın içeriği",
            "format": "byte",
            "nullable": true
          },
          "fileDataType": {
            "type": "string",
            "description": "dosya içeriğinin tipi",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "description": "dosyanın boyutu",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Basım sonuç verileri"
      },
      "TYPE_REST_BENEFITDETAIL": {
        "type": "object",
        "properties": {
          "benefitid": {
            "type": "string",
            "description": "Referans olarak kullanılacak teminat numarası",
            "nullable": true
          },
          "benefitname": {
            "type": "string",
            "description": "Teminat adı",
            "nullable": true
          },
          "annuallimitdesc": {
            "type": "string",
            "description": "Yıllık limit değeri",
            "nullable": true
          },
          "limitvalue": {
            "type": "string",
            "description": "limit değeri",
            "nullable": true
          },
          "benefitgroupid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "benefitgroupdesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teminat bilgileri"
      },
      "TYPE_REST_ZONE": {
        "type": "object",
        "properties": {
          "zoneid": {
            "type": "integer",
            "description": "Referans olarak kullanılacak zone değeri",
            "format": "int32",
            "nullable": true
          },
          "zonedesc": {
            "type": "string",
            "description": "Zone açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_NETWORK": {
        "type": "object",
        "properties": {
          "networkid": {
            "type": "integer",
            "description": "Referans olarak kullanılacak network değeri",
            "format": "int32",
            "nullable": true
          },
          "networkdesc": {
            "type": "string",
            "description": "Network açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_PLAN": {
        "type": "object",
        "properties": {
          "planid": {
            "type": "string",
            "description": "Referans olarak kullanılacak plan numarası",
            "nullable": true
          },
          "planname": {
            "type": "string",
            "description": "Plan adı",
            "nullable": true
          },
          "benefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_BENEFITDETAIL"
            },
            "description": "Planın sahip olduğu teminatların listesi",
            "nullable": true
          },
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_ZONE"
            },
            "description": "Seyehat planın sahip olduğu zone listesi",
            "nullable": true
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_NETWORK"
            },
            "description": "planın sahip olduğu network/anlaşmalı kurum ağı listesi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Plan bilgileri"
      },
      "TYPE_REST_QUESTIONREFTABLE": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Referans olarak kullanılacak anahtar",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "değeri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Referans değer bilgileri"
      },
      "TYPE_REST_QUESTION": {
        "type": "object",
        "properties": {
          "questionid": {
            "type": "integer",
            "description": "Referans olarak kullanılacak soru numarası",
            "format": "int32"
          },
          "questiondesc": {
            "type": "string",
            "description": "Soru açıklaması",
            "nullable": true
          },
          "order": {
            "type": "string",
            "description": "Soru sıra numarası.",
            "nullable": true
          },
          "questiontypeid": {
            "type": "integer",
            "description": "Soru tipi bilgisi. 1 ise \"Sağlık Beyanı\", 2 ise \"Risk Sorusu\"",
            "format": "int32",
            "example": 1
          },
          "questionanswertypeid": {
            "type": "integer",
            "description": "Cevap tipi bilgisi. 1 ise \"Number\", 2 ise \"Text\", 3 ise \"Date\" , 4 ise \"YesNo\", 5 ise \"RefTable\" içinden bir değer olmalıdır.",
            "format": "int32",
            "example": 2
          },
          "questionreftable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_QUESTIONREFTABLE"
            },
            "description": "Referans olarak kullanılcak değerlerin listesi. QUESTIONTYPEID = 5 olduğunda gönderilmesi gereken refarans değerleri içeren tablo",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Risk soruları bilgisi"
      },
      "TYPE_REST_PAYMENTPLAN": {
        "type": "object",
        "properties": {
          "paymentplanid": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ödeme planı değeri",
            "format": "int32"
          },
          "paymentplandesc": {
            "type": "string",
            "description": "Ödeme planı açıklaması",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ödeme planı"
      },
      "TYPE_REST_PRODUCT": {
        "type": "object",
        "properties": {
          "productid": {
            "type": "string",
            "description": "referans olarak kullanılacak ürün numarası",
            "nullable": true
          },
          "productname": {
            "type": "string",
            "description": "Ürün adı",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PLAN"
            },
            "description": "Ürün altında Acentenin satmaya yetki olan planlar",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_QUESTION"
            },
            "description": "Ürüne ait risk soruları listesi",
            "nullable": true
          },
          "productpaymentplans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PAYMENTPLAN"
            },
            "description": "Ürüne ait ve Acentenin kullanmaya yetkisi olan ödeme planları listesi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ürün bilgisi"
      },
      "TYPE_REST_PRODUCTS": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PRODUCT"
            },
            "description": "ürünler",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": " Acentenin satmaya yetkisi olan ürünlerin bilgileri ve buna bağlı plan, teminat, ürün soruları ve ödeme planı bilgilerinin elde edildiği servistir. \r\n\r\nHierarşik olarak Ürün altında planlar, plan içinde teminatlar bulunmaktadır.\r\nHer ürün için sağlık ve risk soruları tanımlanmaktadır.\r\nHer ürün için kullanılabilinecek ödeme planı tanımlanmaktadır.\r\n\r\nTeklif ya da poliçe hangi üründen oluşturulacak ise o ürünün sorularının cevapları beklenmektedir.\r\nTeklif ya da poliçe hangi üründen oluşturulacak ise o ürün içinde tanımlanmış ödeme planlarından biri ile üretim yapılması beklenmektedir.\r\n\r\n**productid** poliçenin hangi üründen üretileceğini tanımlamak için kullanılır.Teklig girilirken teklif bazında ürün seçimi yapılmalıdır.\r\n \r\n**planid** sigortalının satın alabileceği şey ürün altındaki planlarldır. Bir poliçe/teklif içerisinde aynı ürün altındaki planlar kullanılabilir.\r\n\r\n**benefits** plan içinde bulunan sigortalının sahip olacağı teminatlardır.\r\n\r\n**questions** ürüne bağlı sorulan sağlık ve risk sorularıdır.\r\n1. questiontypeid==1 ise Sağlık Beyan soruları,\r\n1. questiontypeid==2 ise Risk sorularıdır.\r\n\r\n*questionanswertypeid* Cevap tipi bilgisidir. 1 ise \"Number\", 2 ise \"Text\", 3 ise \"Date\" , 4 ise \"YesNo\", 5 ise \"RefTable\" içinden bir değer cevap olak beklenmektedir. \r\n1. questionanswertypeid==1 ise \"Number\" formatında cevap beklenmektedir.Format #####.##\r\n1. questionanswertypeid==2 ise \"Text\" formatında cevap beklenmektedir.Maksimum 200 karakter olabilir.\r\n1. questionanswertypeid==3 ise \"Date\" formatında cevap beklenmektedir.Format DD.MM.YYYY olmalıdır.\r\n1. questionanswertypeid==4 ise \"YesNo\" cevabı beklenmektedir. No için 0, Yes için 1 gönderilmelidir.\r\n1. questionanswertypeid==5 ise \"RefTable\" referans tablo daki değerlerden biri beklenmektedir. Refarans tablo verileri** questionreftable**  değişkeni ile iletilmektedir."
      },
      "PaymentplanResponse": {
        "type": "object",
        "properties": {
          "paymentplanId": {
            "type": "integer",
            "description": "Referans olarak kullanılacak ödeme planı değeri",
            "format": "int32"
          },
          "paymentplanDesc": {
            "type": "string",
            "description": "Ödeme planı adı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ödeme planı bilgileri"
      },
      "TYPE_REST_QUESTIONS": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_QUESTION"
            },
            "description": "Risk Soruları listesi",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Risk Soruları"
      },
      "TYPE_REST_PROPOSAL": {
        "type": "object",
        "properties": {
          "test": {
            "type": "integer",
            "description": "Gönderimin test amaçlı olup olmadığı bilgisi. Bu değer 1 gönderilirse yapılan işlem kayıt edilmez, teklif oluşmaz. Ancak dönen bütün değerler gerçekle aynıdır.\r\nDeğer 0 gönderilirse teklif oluşturulur.",
            "format": "int32"
          },
          "proposalid": {
            "type": "integer",
            "description": "teklif numarası. bu değer dolu gönderilirse daha önce oluşturulan teklif üzerinde güncelleme işlemi yapılır. Boş gönderilirse yeni teklif oluşturulur.",
            "format": "int64",
            "nullable": true
          },
          "referenceproposalid": {
            "type": "integer",
            "description": "Entegrasyon için kullanılan alandır. Referans teklif numarasıdır. bu değer aynı olduğu sürece yeni teklif yaratılmaz var olan teklif güncellenir.",
            "format": "int64",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "description": "Teklifin ürün numarası",
            "format": "int32"
          },
          "insurercustomerid": {
            "type": "integer",
            "description": "Sigorta ettiren kişi numarası",
            "format": "int32"
          },
          "startdate": {
            "type": "string",
            "description": "Poliçe başlangıç tarihi",
            "nullable": true
          },
          "enddate": {
            "type": "string",
            "description": "Poliçe bitiş tarihi",
            "nullable": true
          },
          "proposalpersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSON"
            },
            "description": "Teklif içindeki sigortalılar",
            "nullable": true
          },
          "paymentplanid": {
            "type": "integer",
            "description": "Teklif ödeme planı numarası. Eğer boş gönderilirse tüm ödeme planları için hesaplama yapılır",
            "format": "int32",
            "nullable": true
          },
          "paymenttypeid": {
            "type": "integer",
            "description": "Ödeme tipi.",
            "format": "int32",
            "nullable": true
          },
          "zoneid": {
            "type": "integer",
            "description": "Seyehat poliçeleri için bölge kodu",
            "format": "int32",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "description": "Teklifin yazılacağı Acente Kayıt numarası. AGENCYID ya da AGENCYCODE değerlerinden yalnızca biri dolu olmalıdır. AGENCYID dolu ise AGENCYCODE dikkate alınmaz.",
            "format": "int64",
            "nullable": true
          },
          "agencycode": {
            "type": "string",
            "description": "Teklifin yazılacağı Acente Kodu. AGENCYID ya da AGENCYCODE değerlerinden yalnızca biri dolu olmalıdır. AGENCYID dolu ise AGENCYCODE dikkate alınmaz.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teklif oluşturma bilgileri"
      },
      "TYPE_REST_PROPERSONPREMIUM": {
        "type": "object",
        "properties": {
          "insuredcustomerid": {
            "type": "integer",
            "description": "Sigortalı kişi numarası",
            "format": "int64",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "prim",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "description": "net prim",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float"
          },
          "planinfo": {
            "$ref": "#/components/schemas/TYPE_REST_PLAN"
          },
          "premiumcurrency": {
            "type": "number",
            "description": "prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netpremiumcurrency": {
            "type": "number",
            "description": "net prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "personexemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PERSONEXEMPTION"
            },
            "description": "Sigortalı istisna metinleri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_PROPOSALPAYMENTPLAND": {
        "type": "object",
        "properties": {
          "duedate": {
            "type": "string",
            "description": "Taksit tarihi",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Taksit tutarı",
            "format": "float",
            "nullable": true
          },
          "amountcurrency": {
            "type": "number",
            "description": "Taksit tutarı, döviz cinsinden",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Tekli ödeme planı bilgileri"
      },
      "TYPE_REST_PROPOSALPAYMENTPLAN": {
        "type": "object",
        "properties": {
          "paymentplan": {
            "$ref": "#/components/schemas/TYPE_REST_PAYMENTPLAN"
          },
          "installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPAYMENTPLAND"
            },
            "description": "Ödeme planı taksit bilgileri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ödeme plnaı detay"
      },
      "TYPE_REST_FACTORS": {
        "type": "object",
        "properties": {
          "factorid": {
            "type": "integer",
            "format": "int32"
          },
          "factordesc": {
            "type": "string",
            "nullable": true
          },
          "factorvalue": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_PROPOSALPERSONFCTRS": {
        "type": "object",
        "properties": {
          "insuredcustomerid": {
            "type": "integer",
            "format": "int64"
          },
          "factors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_FACTORS"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_PREMIUMCOMPONENT": {
        "type": "object",
        "properties": {
          "componentid": {
            "type": "integer",
            "description": "Bileşen numarası",
            "format": "int32"
          },
          "componentdesc": {
            "type": "string",
            "description": "Bileşen açıklaması",
            "nullable": true
          },
          "premiumcomponentcategoryid": {
            "type": "integer",
            "description": "Bileşen kategori numarası",
            "format": "int32"
          },
          "premiumcomponentcategorydesc": {
            "type": "string",
            "description": "Bileşen kategori açıklaması",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "Bileşen primi",
            "format": "float"
          },
          "tax": {
            "type": "number",
            "description": "Bileşen vergisi",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Prim bileşenleri"
      },
      "TYPE_REST_PROPOSALRESPONSE": {
        "type": "object",
        "properties": {
          "proposalid": {
            "type": "integer",
            "description": "Oluşturulan teklifin numarası",
            "format": "int64",
            "nullable": true
          },
          "referenceproposalid": {
            "type": "string",
            "description": "Entegrasyon için kullanılan alandır. Referans teklif numarasıdır. bu değer aynı olduğu sürece yeni teklif yaratılmaz var olan teklif güncellenir.",
            "nullable": true
          },
          "proposalstatusid": {
            "type": "integer",
            "description": "teklif durum açıklama değeri",
            "format": "int32",
            "nullable": true
          },
          "proposalstatusdesc": {
            "type": "string",
            "description": "teklif durum açıklaması",
            "nullable": true
          },
          "totalpremium": {
            "type": "number",
            "description": "Toplam brüt prim",
            "format": "float",
            "nullable": true
          },
          "netpremium": {
            "type": "number",
            "description": "Toplam net prim",
            "format": "float",
            "nullable": true
          },
          "personlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPERSONPREMIUM"
            },
            "description": "her bir sigortalı için pirm değerleri",
            "nullable": true
          },
          "totaltax": {
            "type": "number",
            "description": "Toplam vergi",
            "format": "float",
            "nullable": true
          },
          "totalcommission": {
            "type": "number",
            "description": "Toplam komisyon",
            "format": "float",
            "nullable": true
          },
          "paymentplans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPAYMENTPLAN"
            },
            "description": "Ödeme planları",
            "nullable": true
          },
          "productid": {
            "type": "integer",
            "description": "Teklifin ürün numarası",
            "format": "int32"
          },
          "zoneid": {
            "type": "integer",
            "description": "Seyehat poliçesi içn zone bilgisi",
            "format": "int32",
            "nullable": true
          },
          "totalpremiumcurrency": {
            "type": "number",
            "description": "Toplam brüt prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "netpremiumcurrency": {
            "type": "number",
            "description": "Toplam net prim, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "totalcommissioncurrency": {
            "type": "number",
            "description": "Toplam komisyon, Döviz kodu cinsinden",
            "format": "float",
            "nullable": true
          },
          "currencycode": {
            "type": "string",
            "description": "Döviz kodu",
            "nullable": true
          },
          "currencyrate": {
            "type": "number",
            "description": "Döviz kuru",
            "format": "float"
          },
          "policypremiumcurrency": {
            "type": "number",
            "description": "Poliçe basımı için kullanılcacak dövizli poliçe primi",
            "format": "float",
            "nullable": true
          },
          "policycurrencycode": {
            "type": "string",
            "description": "Poliçe basımı için kullanılacak Döviz tipi",
            "nullable": true
          },
          "policycurrencyrate": {
            "type": "number",
            "description": "Poliçe basımı için kullanılacak Döviz kuru",
            "format": "float",
            "nullable": true
          },
          "agencyid": {
            "type": "integer",
            "description": "Teklifin yazılacağı Acente Kayıt numarası. AGENCYID ya da AGENCYCODE değerlerinden yalnızca biri dolu olmalıdır. AGENCYID dolu ise AGENCYCODE dikkate alınmaz.",
            "format": "int64",
            "nullable": true
          },
          "agencycode": {
            "type": "string",
            "description": "Teklifin yazılacağı Acente Kodu. AGENCYID ya da AGENCYCODE değerlerinden yalnızca biri dolu olmalıdır. AGENCYID dolu ise AGENCYCODE dikkate alınmaz.",
            "nullable": true
          },
          "proposalfactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_FACTORS"
            },
            "description": "Teklif indirim ve şarjmanları",
            "nullable": true
          },
          "personfactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSONFCTRS"
            },
            "description": "sigortalı üzerindeki indirim ve şarjmanlar",
            "nullable": true
          },
          "persondocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PERSONDOCUMENTS"
            },
            "description": "Sigoralıların döküman bilgileri",
            "nullable": true
          },
          "premiumcomponent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PREMIUMCOMPONENT"
            },
            "description": "prim bileşenleri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Teklif bilgileri"
      },
      "TYPE_REST_PROPOSALFACTORS": {
        "type": "object",
        "properties": {
          "proposalid": {
            "type": "integer",
            "format": "int64"
          },
          "proposalfactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_FACTORS"
            },
            "nullable": true
          },
          "personfactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_PROPOSALPERSONFCTRS"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApplicationResponse": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ChangeOwnerRequest": {
        "type": "object",
        "properties": {
          "proposalId": {
            "type": "integer",
            "format": "int64"
          },
          "insurerCustomerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreditCard": {
        "type": "object",
        "properties": {
          "cardHolder": {
            "type": "string",
            "description": "Kart sahibi adı.",
            "nullable": true,
            "example": "ERDEM SARI"
          },
          "cardNumber": {
            "type": "string",
            "description": "Kart numarası. RSA public key ile şifrelenmiş olarak beklenmektedir.",
            "nullable": true,
            "example": "1111222233334444"
          },
          "cvc": {
            "type": "string",
            "description": "CVC numarası. RSA public key ile şifrelenmiş olarak beklenmektedir.",
            "nullable": true,
            "example": "123"
          },
          "expirationDateMonth": {
            "type": "string",
            "description": "Son kullanma ayı. MM formatında . RSA public key ile şifrelenmiş olarak beklenmektedir.",
            "nullable": true,
            "example": "12"
          },
          "expirationDateYear": {
            "type": "string",
            "description": "son kullanma yılı. YYYY formatında. RSA public key ile şifrelenmiş olarak beklenmektedir.",
            "nullable": true,
            "example": "2021"
          }
        },
        "additionalProperties": false,
        "description": "Kredi kartı oluşturmak için gerekli veriler. RSA 2048 bit ile şifrelenmiş olarak beklenmektedir. Public key bilgileri dokümantasyonlarda paylaşılacaktır."
      },
      "MakePolicyFromProposalRequest": {
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "integer",
            "description": "Poliçeleşmenin yapılacağı Ödeme planı",
            "format": "int32",
            "example": 51
          },
          "doPayment": {
            "type": "boolean",
            "description": "Tahsilat poliçeleşme sırasında yapılsın mı.",
            "example": true
          },
          "creditcard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "bankAccountId": {
            "type": "integer",
            "description": "Ödeme tipi banka ise hangi banka hesabının kullanılacağını tutmak için kullanılır",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DemoPremiumRequest": {
        "type": "object",
        "properties": {
          "planID": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "genderID": {
            "type": "integer",
            "format": "int32"
          },
          "relationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "newOrRenew": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DemoPremiumResponse": {
        "type": "object",
        "properties": {
          "premium": {
            "type": "number",
            "format": "float"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_SELFCLAIM": {
        "type": "object",
        "properties": {
          "policyid": {
            "type": "integer",
            "description": "Poliçe kayıt numarası",
            "format": "int64"
          },
          "customerid": {
            "type": "integer",
            "description": "sigortalı müşteri numarası",
            "format": "int64"
          },
          "hcid": {
            "type": "integer",
            "description": "Anlaşmalı kurum numarası",
            "format": "int64"
          },
          "selfbenefitid": {
            "type": "integer",
            "description": "Self servis teminat numarası",
            "format": "int32"
          },
          "eventdate": {
            "type": "string",
            "description": "Tazminata konu olayın gerçekşelme tarihi",
            "format": "date-time"
          },
          "claimdescription": {
            "type": "string",
            "description": "Tazminat açıklaması, şikayet tanımı",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Self servis tazmiant oluşturma bilgileri"
      },
      "TYPE_REST_SELFCLAIMDETAIL": {
        "type": "object",
        "properties": {
          "benefitid": {
            "type": "integer",
            "format": "int32"
          },
          "benefitname": {
            "type": "string",
            "nullable": true
          },
          "provisionamount": {
            "type": "number",
            "format": "double"
          },
          "coinsurance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "invoicenumber": {
            "type": "string",
            "nullable": true
          },
          "invoicedate": {
            "type": "string",
            "nullable": true
          },
          "invoiceamount": {
            "type": "number",
            "format": "double"
          },
          "invoiceexclusion": {
            "type": "number",
            "format": "double"
          },
          "noncontractamount": {
            "type": "number",
            "format": "double"
          },
          "sgkamount": {
            "type": "number",
            "format": "double"
          },
          "payableamount": {
            "type": "number",
            "format": "double"
          },
          "daycount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "netamount": {
            "type": "number",
            "format": "double"
          },
          "vatrate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finishdate": {
            "type": "string",
            "nullable": true
          },
          "receiptno": {
            "type": "string",
            "nullable": true
          },
          "seancecount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exemptionamount": {
            "type": "number",
            "format": "double"
          },
          "invoiceserialnumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TYPE_REST_SELFCLAIMRESPONSE": {
        "type": "object",
        "properties": {
          "claimid": {
            "type": "integer",
            "description": "Oluşan tazminatın numarası",
            "format": "int64"
          },
          "claimdescription": {
            "type": "string",
            "description": "Tazminat açıklaması",
            "nullable": true
          },
          "eventdate": {
            "type": "string",
            "nullable": true
          },
          "healthcenterid": {
            "type": "integer",
            "format": "int64"
          },
          "healthcentername": {
            "type": "string",
            "nullable": true
          },
          "doctorname": {
            "type": "string",
            "nullable": true
          },
          "claimstatusdesc": {
            "type": "string",
            "nullable": true
          },
          "claimstatusid": {
            "type": "integer",
            "format": "int32"
          },
          "wherE2PAYDESC": {
            "type": "string",
            "nullable": true
          },
          "selfclaimdetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TYPE_REST_SELFCLAIMDETAIL"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Self servis tazminat oluşturma sonuçları"
      },
      "TYPE_REST_SELFBENEFIT": {
        "type": "object",
        "properties": {
          "selfbenefitid": {
            "type": "integer",
            "description": "Self servis teminat numarası",
            "format": "int32",
            "example": 1
          },
          "selfbenefirdesc": {
            "type": "string",
            "description": "Self servis teminat açıklaması",
            "nullable": true,
            "example": "Doktor muayene teminatı"
          }
        },
        "additionalProperties": false,
        "description": "Self Servis Tazminat oluşturmada kullanılabilinecek teminatlar"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header Bearer yetkilendirme yöntemini kullanmaktadır. <br> \r\n                      Header içierisinde 'Bearer' [boşluk] token bilgisini sonraki kutuya giriniz.\r\n                      <br><br>Örnek: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}